

# include "TrackerAlignment/inc/AlignmentDerivatives.hh"
# include <math.h>
# include <vector>

double CosmicTrack_DCA(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = pow(b1, 2);
    double R44 = R42 + R43 + 1;
    double R45 = pow(R44, -1.0/2.0);
    double R46 = R25*R45;
    double R47 = 1.0/R44;
    double R48 = pow(R42*R47 + R43*R47 + R47, -1.0/2.0);
    double R49 = R40*R48;
    double R50 = R39*R40;
    double R51 = R45*R48;
    double R52 = R35*R45;
    double R53 = R46*R49*b1 + R49*R52*a1 - R50*R51;
    double R54 = 1.0/(1.0 - pow(R53, 2));
    double R55 = -plane_z;
    double R56 = R55 + panel_dz + panel_straw0z;
    double R57 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R58 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R59 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R60 = R16*R4;
    double R61 = R20*R4;
    double R62 = R11*R60 - R61*R7;
    double R63 = R11*R61 + R60*R7;
    double R64 = -panel_straw0z + wire_z;
    double R65 = R4*R8;
    double R66 = R10*R17 + R18;
    double R67 = R10*R9 - R12;
    double R68 = R16*R66 - R20*R67;
    double R69 = R16*R67 + R20*R66;
    double R70 = -R2*R56 - R24*R58 + R55 + R57*R6 - R59*(-R10*R2 + R24*R63 - R6*R62) - R64*(R2*R65 + R24*R69 - R6*R68) + b0 - plane_dz;
    double R71 = R51*b1;
    double R72 = R70*R71;
    double R73 = -R36*R56 - R37*R57 - R38*R58 - R59*(-R10*R36 + R37*R62 + R38*R63) - R64*(R36*R65 + R37*R68 + R38*R69) - plane_dy;
    double R74 = R51*R73;
    double R75 = -R30*R56 - R31*R57 - R34*R58 - R59*(-R10*R30 + R31*R62 + R34*R63) - R64*(R30*R65 + R31*R68 + R34*R69) + a0 - plane_dx;
    double R76 = R51*a1;
    double R77 = R75*R76;
    double R78 = R35*R40;
    double R79 = R41*R70 + R50*R73 + R75*R78;
    double R80 = R54*(-R53*(R72 - R74 + R77) + R79);
    double R81 = R54*(R53*R79 - R72 + R74 - R77);
    double R82 = sqrt(pow(R75 + R76*R81 - R78*R80, 2) + pow(-R41*R80 + R70 + R71*R81, 2) + pow(-R50*R80 - R51*R81 + R73, 2));
    double R83 = R39*R45;
    double R84 = R52 + R83*a1;
    double R85 = -R46*a1 + R52*b1;
    double R86 = -R46 - R83*b1;
    double R87 = pow(pow(R84, 2) + pow(R85, 2) + pow(R86, 2), -1.0/2.0);
    double result = ((R70*R84*R87 + R73*R85*R87 + R75*R86*R87 > 0) ? (
   -R82
)
: (
   R82
));
    return result;
}


double CosmicTrack_DCA_Deriv_a0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = cos(plane_a);
    double R8 = cos(plane_b);
    double R9 = R7*R8;
    double R10 = sin(panel_a);
    double R11 = cos(panel_b);
    double R12 = 1.0*R10*R11;
    double R13 = sin(plane_b);
    double R14 = sin(panel_g);
    double R15 = cos(panel_a);
    double R16 = R14*R15;
    double R17 = sin(panel_b);
    double R18 = cos(panel_g);
    double R19 = R10*R18;
    double R20 = -R16 + R17*R19;
    double R21 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R22 = 1.0/R21;
    double R23 = R22*panel_straw0x;
    double R24 = R15*R18;
    double R25 = R10*R14;
    double R26 = R17*R25 + R24;
    double R27 = R22*panel_straw0y;
    double R28 = 1.0*R20*R23 - 1.0*R26*R27;
    double R29 = 1.0*R20*R27 + 1.0*R23*R26;
    double R30 = sin(plane_a);
    double R31 = R30*R8;
    double R32 = R12*R9 - R13*R28 + R29*R31;
    double R33 = sin(plane_g);
    double R34 = R30*R33;
    double R35 = cos(plane_g);
    double R36 = R35*R7;
    double R37 = R13*R36 + R34;
    double R38 = R35*R8;
    double R39 = R33*R7;
    double R40 = R30*R35;
    double R41 = R13*R40 - R39;
    double R42 = R12*R37 + R28*R38 + R29*R41;
    double R43 = R13*R39 - R40;
    double R44 = R33*R8;
    double R45 = R13*R34 + R36;
    double R46 = R12*R43 + R28*R44 + R29*R45;
    double R47 = pow(pow(R32, 2) + pow(R42, 2) + pow(R46, 2), -1.0/2.0);
    double R48 = pow(R2, -1.0/2.0);
    double R49 = R32*R48;
    double R50 = R46*R47;
    double R51 = R48*R6;
    double R52 = R42*R47;
    double R53 = R51*a1;
    double R54 = R47*R49*R6*b1 - R50*R51 + R52*R53;
    double R55 = 1.0/(1.0 - pow(R54, 2));
    double R56 = R55*(R52*R54 - R53);
    double R57 = R56*R6;
    double R58 = R32*R47;
    double R59 = -plane_z;
    double R60 = R59 + panel_dz + panel_straw0z;
    double R61 = R23*panel_dx - R27*panel_dy + panel_straw0x;
    double R62 = R23*panel_dy + R27*panel_dx + panel_straw0y;
    double R63 = -R21 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R64 = R11*R23;
    double R65 = R11*R27;
    double R66 = -R14*R65 + R18*R64;
    double R67 = R14*R64 + R18*R65;
    double R68 = -panel_straw0z + wire_z;
    double R69 = R11*R15;
    double R70 = R17*R24 + R25;
    double R71 = R16*R17 - R19;
    double R72 = R23*R70 - R27*R71;
    double R73 = R23*R71 + R27*R70;
    double R74 = R13*R61 - R31*R62 + R59 - R60*R9 - R63*(-R13*R66 - R17*R9 + R31*R67) - R68*(-R13*R72 + R31*R73 + R69*R9) + b0 - plane_dz;
    double R75 = R51*b1;
    double R76 = R74*R75;
    double R77 = -R43*R60 - R44*R61 - R45*R62 - R63*(-R17*R43 + R44*R66 + R45*R67) - R68*(R43*R69 + R44*R72 + R45*R73) - plane_dy;
    double R78 = R51*R77;
    double R79 = -R37*R60 - R38*R61 - R41*R62 - R63*(-R17*R37 + R38*R66 + R41*R67) - R68*(R37*R69 + R38*R72 + R41*R73) + a0 - plane_dx;
    double R80 = R53*R79;
    double R81 = R50*R77 + R52*R79 + R58*R74;
    double R82 = R55*(-R54*(R76 - R78 + R80) + R81);
    double R83 = R55*(R54*R81 - R76 + R78 - R80);
    double R84 = -R58*R82 + R74 + R75*R83;
    double R85 = -R50*R82 - R51*R83 + R77;
    double R86 = -R52*R82 + R53*R83 + R79;
    double R87 = 2*R56;
    double R88 = 2*R55*(R52 - R53*R54);
    double R89 = ((1.0/2.0)*R84*(-R58*R88 + R75*R87) + (1.0/2.0)*R85*(-R50*R88 - R51*R87) + (1.0/2.0)*R86*(-R52*R88 + R53*R87 + 2))/sqrt(pow(R84, 2) + pow(R85, 2) + pow(R86, 2));
    double R90 = R42*R48;
    double R91 = R46*R48;
    double R92 = R90 + R91*a1;
    double R93 = -R49*a1 + R90*b1;
    double R94 = -R49 - R91*b1;
    double R95 = pow(pow(R92, 2) + pow(R93, 2) + pow(R94, 2), -1.0/2.0);
    double result = R3*R57 + R4*R57 + R5*R57 + ((R74*R92*R95 + R77*R93*R95 + R79*R94*R95 > 0) ? (
   -R89
)
: (
   R89
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_b0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = cos(plane_a);
    double R8 = cos(plane_b);
    double R9 = R7*R8;
    double R10 = sin(panel_a);
    double R11 = cos(panel_b);
    double R12 = 1.0*R10*R11;
    double R13 = sin(plane_b);
    double R14 = sin(panel_g);
    double R15 = cos(panel_a);
    double R16 = R14*R15;
    double R17 = sin(panel_b);
    double R18 = cos(panel_g);
    double R19 = R10*R18;
    double R20 = -R16 + R17*R19;
    double R21 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R22 = 1.0/R21;
    double R23 = R22*panel_straw0x;
    double R24 = R15*R18;
    double R25 = R10*R14;
    double R26 = R17*R25 + R24;
    double R27 = R22*panel_straw0y;
    double R28 = 1.0*R20*R23 - 1.0*R26*R27;
    double R29 = 1.0*R20*R27 + 1.0*R23*R26;
    double R30 = sin(plane_a);
    double R31 = R30*R8;
    double R32 = R12*R9 - R13*R28 + R29*R31;
    double R33 = sin(plane_g);
    double R34 = R30*R33;
    double R35 = cos(plane_g);
    double R36 = R35*R7;
    double R37 = R13*R36 + R34;
    double R38 = R35*R8;
    double R39 = R33*R7;
    double R40 = R30*R35;
    double R41 = R13*R40 - R39;
    double R42 = R12*R37 + R28*R38 + R29*R41;
    double R43 = R13*R39 - R40;
    double R44 = R33*R8;
    double R45 = R13*R34 + R36;
    double R46 = R12*R43 + R28*R44 + R29*R45;
    double R47 = pow(pow(R32, 2) + pow(R42, 2) + pow(R46, 2), -1.0/2.0);
    double R48 = R32*R47;
    double R49 = pow(R2, -1.0/2.0);
    double R50 = R49*R6;
    double R51 = R50*b1;
    double R52 = R46*R47;
    double R53 = R42*R49;
    double R54 = R47*R53*R6*a1 + R48*R51 - R50*R52;
    double R55 = 1.0/(1.0 - pow(R54, 2));
    double R56 = R55*(R48*R54 - R51);
    double R57 = R56*R6;
    double R58 = -plane_z;
    double R59 = R58 + panel_dz + panel_straw0z;
    double R60 = R23*panel_dx - R27*panel_dy + panel_straw0x;
    double R61 = R23*panel_dy + R27*panel_dx + panel_straw0y;
    double R62 = -R21 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R63 = R11*R23;
    double R64 = R11*R27;
    double R65 = -R14*R64 + R18*R63;
    double R66 = R14*R63 + R18*R64;
    double R67 = -panel_straw0z + wire_z;
    double R68 = R11*R15;
    double R69 = R17*R24 + R25;
    double R70 = R16*R17 - R19;
    double R71 = R23*R69 - R27*R70;
    double R72 = R23*R70 + R27*R69;
    double R73 = R13*R60 - R31*R61 + R58 - R59*R9 - R62*(-R13*R65 - R17*R9 + R31*R66) - R67*(-R13*R71 + R31*R72 + R68*R9) + b0 - plane_dz;
    double R74 = R51*R73;
    double R75 = -R43*R59 - R44*R60 - R45*R61 - R62*(-R17*R43 + R44*R65 + R45*R66) - R67*(R43*R68 + R44*R71 + R45*R72) - plane_dy;
    double R76 = R50*R75;
    double R77 = -R37*R59 - R38*R60 - R41*R61 - R62*(-R17*R37 + R38*R65 + R41*R66) - R67*(R37*R68 + R38*R71 + R41*R72) + a0 - plane_dx;
    double R78 = R50*a1;
    double R79 = R77*R78;
    double R80 = R42*R47;
    double R81 = R48*R73 + R52*R75 + R77*R80;
    double R82 = R55*(-R54*(R74 - R76 + R79) + R81);
    double R83 = R55*(R54*R81 - R74 + R76 - R79);
    double R84 = -R48*R82 + R51*R83 + R73;
    double R85 = -R50*R83 - R52*R82 + R75;
    double R86 = R77 + R78*R83 - R80*R82;
    double R87 = 2*R56;
    double R88 = 2*R55*(R48 - R51*R54);
    double R89 = ((1.0/2.0)*R84*(-R48*R88 + R51*R87 + 2) + (1.0/2.0)*R85*(-R50*R87 - R52*R88) + (1.0/2.0)*R86*(R78*R87 - R80*R88))/sqrt(pow(R84, 2) + pow(R85, 2) + pow(R86, 2));
    double R90 = R46*R49;
    double R91 = R53 + R90*a1;
    double R92 = R32*R49;
    double R93 = R53*b1 - R92*a1;
    double R94 = -R90*b1 - R92;
    double R95 = pow(pow(R91, 2) + pow(R93, 2) + pow(R94, 2), -1.0/2.0);
    double result = R3*R57 + R4*R57 + R5*R57 + ((R73*R91*R95 + R75*R93*R95 + R77*R94*R95 > 0) ? (
   -R89
)
: (
   R89
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_a1(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = pow(R2, -2);
    double R4 = R3*a1;
    double R5 = 1.0/R2;
    double R6 = R0*R5;
    double R7 = R1*R5;
    double R8 = R5 + R6 + R7;
    double R9 = pow(R8, -1.0/2.0);
    double R10 = cos(plane_a);
    double R11 = cos(plane_b);
    double R12 = R10*R11;
    double R13 = sin(panel_a);
    double R14 = cos(panel_b);
    double R15 = 1.0*R13*R14;
    double R16 = sin(plane_b);
    double R17 = sin(panel_g);
    double R18 = cos(panel_a);
    double R19 = R17*R18;
    double R20 = sin(panel_b);
    double R21 = cos(panel_g);
    double R22 = R13*R21;
    double R23 = -R19 + R20*R22;
    double R24 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R25 = 1.0/R24;
    double R26 = R25*panel_straw0x;
    double R27 = R18*R21;
    double R28 = R13*R17;
    double R29 = R20*R28 + R27;
    double R30 = R25*panel_straw0y;
    double R31 = 1.0*R23*R26 - 1.0*R29*R30;
    double R32 = 1.0*R23*R30 + 1.0*R26*R29;
    double R33 = sin(plane_a);
    double R34 = R11*R33;
    double R35 = R12*R15 - R16*R31 + R32*R34;
    double R36 = sin(plane_g);
    double R37 = R33*R36;
    double R38 = cos(plane_g);
    double R39 = R10*R38;
    double R40 = R16*R39 + R37;
    double R41 = R11*R38;
    double R42 = R10*R36;
    double R43 = R33*R38;
    double R44 = R16*R43 - R42;
    double R45 = R15*R40 + R31*R41 + R32*R44;
    double R46 = R16*R42 - R43;
    double R47 = R11*R36;
    double R48 = R16*R37 + R39;
    double R49 = R15*R46 + R31*R47 + R32*R48;
    double R50 = pow(pow(R35, 2) + pow(R45, 2) + pow(R49, 2), -1.0/2.0);
    double R51 = R50*R9;
    double R52 = pow(R2, -1.0/2.0);
    double R53 = R35*R52;
    double R54 = R53*b1;
    double R55 = R49*R50;
    double R56 = R52*R9;
    double R57 = R45*R52;
    double R58 = R51*R57;
    double R59 = R51*R54 - R55*R56 + R58*a1;
    double R60 = 1.0 - pow(R59, 2);
    double R61 = 1.0/R60;
    double R62 = -plane_z;
    double R63 = R62 + panel_dz + panel_straw0z;
    double R64 = R26*panel_dx - R30*panel_dy + panel_straw0x;
    double R65 = R26*panel_dy + R30*panel_dx + panel_straw0y;
    double R66 = -R24 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R67 = R14*R26;
    double R68 = R14*R30;
    double R69 = -R17*R68 + R21*R67;
    double R70 = R17*R67 + R21*R68;
    double R71 = -panel_straw0z + wire_z;
    double R72 = R14*R18;
    double R73 = R20*R27 + R28;
    double R74 = R19*R20 - R22;
    double R75 = R26*R73 - R30*R74;
    double R76 = R26*R74 + R30*R73;
    double R77 = -R12*R63 + R16*R64 - R34*R65 + R62 - R66*(-R12*R20 - R16*R69 + R34*R70) - R71*(R12*R72 - R16*R75 + R34*R76) + b0 - plane_dz;
    double R78 = R35*R50;
    double R79 = -R46*R63 - R47*R64 - R48*R65 - R66*(-R20*R46 + R47*R69 + R48*R70) - R71*(R46*R72 + R47*R75 + R48*R76) - plane_dy;
    double R80 = -R40*R63 - R41*R64 - R44*R65 - R66*(-R20*R40 + R41*R69 + R44*R70) - R71*(R40*R72 + R41*R75 + R44*R76) + a0 - plane_dx;
    double R81 = R45*R50;
    double R82 = R55*R79 + R77*R78 + R80*R81;
    double R83 = R56*b1;
    double R84 = R77*R83;
    double R85 = R56*R79;
    double R86 = R56*R80;
    double R87 = R86*a1;
    double R88 = -R84 + R85 - R87;
    double R89 = R59*R82 + R88;
    double R90 = R61*R89;
    double R91 = 2*R90;
    double R92 = R9*R91;
    double R93 = R5*a1;
    double R94 = R3*pow(a1, 3);
    double R95 = R1*R4;
    double R96 = (R4 - R93 + R94 + R95)/pow(R8, 3.0/2.0);
    double R97 = R90*R96;
    double R98 = R9/pow(R2, 3.0/2.0);
    double R99 = R98*a1;
    double R100 = R99*b1;
    double R101 = R100*R78;
    double R102 = R55*R99;
    double R103 = R0*R98;
    double R104 = R103*R81;
    double R105 = R50*R96;
    double R106 = R105*R54;
    double R107 = R52*R96;
    double R108 = R107*R55;
    double R109 = R105*R57*a1;
    double R110 = -R101 + R102 - R104 + R106 - R108 + R109 + R58;
    double R111 = R77*b1;
    double R112 = R107*a1;
    double R113 = R103*R80 - R107*R111 + R107*R79 + R111*R99 - R112*R80 - R79*R99 - R86;
    double R114 = R61*(R110*R82 + R113);
    double R115 = R5*R9;
    double R116 = R114*R9;
    double R117 = R59*(-2*R101 + 2*R102 - 2*R104 + 2*R106 - 2*R108 + 2*R109 + 2*R58)/pow(R60, 2);
    double R118 = R117*R89;
    double R119 = R118*R9;
    double R120 = -R59*(R84 - R85 + R87) + R82;
    double R121 = R120*R61;
    double R122 = -R121*R78 + R77 + R83*R90;
    double R123 = R56*R90;
    double R124 = -R121*R55 - R123 + R79;
    double R125 = -R121*R81 + R123*a1 + R80;
    double R126 = R107*R91;
    double R127 = 2*R114;
    double R128 = R61*(R110*R88 + R113*R59);
    double R129 = 2*R128;
    double R130 = 2*R118;
    double R131 = R117*R120;
    double R132 = 2*R131;
    double R133 = R127*R56;
    double R134 = 2*R55;
    double R135 = R130*R56;
    double R136 = ((1.0/2.0)*R122*(-R100*R91 + R126*b1 + R127*R83 - R129*R78 + R130*R83 - R132*R78) + (1.0/2.0)*R124*(-R126 - R128*R134 - R131*R134 - R133 - R135 + R91*R99) + (1.0/2.0)*R125*(-R103*R91 + R112*R91 + 2*R123 - R129*R81 - R132*R81 + R133*a1 + R135*a1))/sqrt(pow(R122, 2) + pow(R124, 2) + pow(R125, 2));
    double R137 = R49*R52;
    double R138 = R137*a1 + R57;
    double R139 = -R53*a1 + R57*b1;
    double R140 = -R137*b1 - R53;
    double R141 = pow(pow(R138, 2) + pow(R139, 2) + pow(R140, 2), -1.0/2.0);
    double result = R114*R115 + R115*R118 + R116*R6 + R116*R7 + R119*R6 + R119*R7 - R4*R92 + R5*R97 + R6*R97 + R7*R97 + R92*R93 - R92*R94 - R92*R95 + ((R138*R141*R77 + R139*R141*R79 + R140*R141*R80 > 0) ? (
   -R136
)
: (
   R136
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_b1(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = pow(R2, -2);
    double R4 = R3*b1;
    double R5 = 1.0/R2;
    double R6 = R0*R5;
    double R7 = R1*R5;
    double R8 = R5 + R6 + R7;
    double R9 = pow(R8, -1.0/2.0);
    double R10 = pow(R2, -1.0/2.0);
    double R11 = cos(plane_a);
    double R12 = cos(plane_b);
    double R13 = R11*R12;
    double R14 = sin(panel_a);
    double R15 = cos(panel_b);
    double R16 = 1.0*R14*R15;
    double R17 = sin(plane_b);
    double R18 = sin(panel_g);
    double R19 = cos(panel_a);
    double R20 = R18*R19;
    double R21 = sin(panel_b);
    double R22 = cos(panel_g);
    double R23 = R14*R22;
    double R24 = -R20 + R21*R23;
    double R25 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R26 = 1.0/R25;
    double R27 = R26*panel_straw0x;
    double R28 = R19*R22;
    double R29 = R14*R18;
    double R30 = R21*R29 + R28;
    double R31 = R26*panel_straw0y;
    double R32 = 1.0*R24*R27 - 1.0*R30*R31;
    double R33 = 1.0*R24*R31 + 1.0*R27*R30;
    double R34 = sin(plane_a);
    double R35 = R12*R34;
    double R36 = R13*R16 - R17*R32 + R33*R35;
    double R37 = R10*R36;
    double R38 = sin(plane_g);
    double R39 = R34*R38;
    double R40 = cos(plane_g);
    double R41 = R11*R40;
    double R42 = R17*R41 + R39;
    double R43 = R12*R40;
    double R44 = R11*R38;
    double R45 = R34*R40;
    double R46 = R17*R45 - R44;
    double R47 = R16*R42 + R32*R43 + R33*R46;
    double R48 = R17*R44 - R45;
    double R49 = R12*R38;
    double R50 = R17*R39 + R41;
    double R51 = R16*R48 + R32*R49 + R33*R50;
    double R52 = pow(pow(R36, 2) + pow(R47, 2) + pow(R51, 2), -1.0/2.0);
    double R53 = R52*R9;
    double R54 = R37*R53;
    double R55 = R51*R52;
    double R56 = R10*R9;
    double R57 = R10*R47;
    double R58 = R57*a1;
    double R59 = R53*R58 + R54*b1 - R55*R56;
    double R60 = 1.0 - pow(R59, 2);
    double R61 = 1.0/R60;
    double R62 = -plane_z;
    double R63 = R62 + panel_dz + panel_straw0z;
    double R64 = R27*panel_dx - R31*panel_dy + panel_straw0x;
    double R65 = R27*panel_dy + R31*panel_dx + panel_straw0y;
    double R66 = -R25 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R67 = R15*R27;
    double R68 = R15*R31;
    double R69 = -R18*R68 + R22*R67;
    double R70 = R18*R67 + R22*R68;
    double R71 = -panel_straw0z + wire_z;
    double R72 = R15*R19;
    double R73 = R21*R28 + R29;
    double R74 = R20*R21 - R23;
    double R75 = R27*R73 - R31*R74;
    double R76 = R27*R74 + R31*R73;
    double R77 = -R13*R63 + R17*R64 - R35*R65 + R62 - R66*(-R13*R21 - R17*R69 + R35*R70) - R71*(R13*R72 - R17*R75 + R35*R76) + b0 - plane_dz;
    double R78 = R36*R52;
    double R79 = -R48*R63 - R49*R64 - R50*R65 - R66*(-R21*R48 + R49*R69 + R50*R70) - R71*(R48*R72 + R49*R75 + R50*R76) - plane_dy;
    double R80 = -R42*R63 - R43*R64 - R46*R65 - R66*(-R21*R42 + R43*R69 + R46*R70) - R71*(R42*R72 + R43*R75 + R46*R76) + a0 - plane_dx;
    double R81 = R47*R52;
    double R82 = R55*R79 + R77*R78 + R80*R81;
    double R83 = R56*R77;
    double R84 = R83*b1;
    double R85 = R56*R79;
    double R86 = R56*a1;
    double R87 = R80*R86;
    double R88 = -R84 + R85 - R87;
    double R89 = R59*R82 + R88;
    double R90 = R61*R89;
    double R91 = 2*R90;
    double R92 = R9*R91;
    double R93 = R5*b1;
    double R94 = R3*pow(b1, 3);
    double R95 = R0*R4;
    double R96 = (R4 - R93 + R94 + R95)/pow(R8, 3.0/2.0);
    double R97 = R90*R96;
    double R98 = R9/pow(R2, 3.0/2.0);
    double R99 = R1*R98;
    double R100 = R78*R99;
    double R101 = R98*b1;
    double R102 = R101*R55;
    double R103 = R101*a1;
    double R104 = R103*R81;
    double R105 = R52*R96;
    double R106 = R105*R37*b1;
    double R107 = R10*R96;
    double R108 = R107*R55;
    double R109 = R105*R58;
    double R110 = -R100 + R102 - R104 + R106 - R108 + R109 + R54;
    double R111 = R107*b1;
    double R112 = R80*a1;
    double R113 = R101*R112 - R101*R79 - R107*R112 + R107*R79 - R111*R77 + R77*R99 - R83;
    double R114 = R61*(R110*R82 + R113);
    double R115 = R5*R9;
    double R116 = R114*R9;
    double R117 = R59*(-2*R100 + 2*R102 - 2*R104 + 2*R106 - 2*R108 + 2*R109 + 2*R54)/pow(R60, 2);
    double R118 = R117*R89;
    double R119 = R118*R9;
    double R120 = -R59*(R84 - R85 + R87) + R82;
    double R121 = R120*R61;
    double R122 = R56*R90;
    double R123 = -R121*R78 + R122*b1 + R77;
    double R124 = -R121*R55 - R122 + R79;
    double R125 = -R121*R81 + R80 + R86*R90;
    double R126 = R107*R91;
    double R127 = 2*R114;
    double R128 = R127*R56;
    double R129 = 2*R55;
    double R130 = R61*(R110*R88 + R113*R59);
    double R131 = 2*R118;
    double R132 = R131*R56;
    double R133 = R117*R120;
    double R134 = 2*R130;
    double R135 = 2*R133;
    double R136 = ((1.0/2.0)*R123*(R111*R91 + 2*R122 + R128*b1 + R132*b1 - R134*R78 - R135*R78 - R91*R99) + (1.0/2.0)*R124*(R101*R91 - R126 - R128 - R129*R130 - R129*R133 - R132) + (1.0/2.0)*R125*(-R103*R91 + R126*a1 + R127*R86 + R131*R86 - R134*R81 - R135*R81))/sqrt(pow(R123, 2) + pow(R124, 2) + pow(R125, 2));
    double R137 = R10*R51;
    double R138 = R137*a1 + R57;
    double R139 = -R37*a1 + R57*b1;
    double R140 = -R137*b1 - R37;
    double R141 = pow(pow(R138, 2) + pow(R139, 2) + pow(R140, 2), -1.0/2.0);
    double result = R114*R115 + R115*R118 + R116*R6 + R116*R7 + R119*R6 + R119*R7 - R4*R92 + R5*R97 + R6*R97 + R7*R97 + R92*R93 - R92*R94 - R92*R95 + ((R138*R141*R77 + R139*R141*R79 + R140*R141*R80 > 0) ? (
   -R136
)
: (
   R136
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_t0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double result = 1;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dx(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = cos(plane_a);
    double R8 = cos(plane_b);
    double R9 = R7*R8;
    double R10 = sin(panel_a);
    double R11 = cos(panel_b);
    double R12 = 1.0*R10*R11;
    double R13 = sin(plane_b);
    double R14 = sin(panel_g);
    double R15 = cos(panel_a);
    double R16 = R14*R15;
    double R17 = sin(panel_b);
    double R18 = cos(panel_g);
    double R19 = R10*R18;
    double R20 = -R16 + R17*R19;
    double R21 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R22 = 1.0/R21;
    double R23 = R22*panel_straw0x;
    double R24 = R15*R18;
    double R25 = R10*R14;
    double R26 = R17*R25 + R24;
    double R27 = R22*panel_straw0y;
    double R28 = 1.0*R20*R23 - 1.0*R26*R27;
    double R29 = 1.0*R20*R27 + 1.0*R23*R26;
    double R30 = sin(plane_a);
    double R31 = R30*R8;
    double R32 = R12*R9 - R13*R28 + R29*R31;
    double R33 = sin(plane_g);
    double R34 = R30*R33;
    double R35 = cos(plane_g);
    double R36 = R35*R7;
    double R37 = R13*R36 + R34;
    double R38 = R35*R8;
    double R39 = R33*R7;
    double R40 = R30*R35;
    double R41 = R13*R40 - R39;
    double R42 = R12*R37 + R28*R38 + R29*R41;
    double R43 = R13*R39 - R40;
    double R44 = R33*R8;
    double R45 = R13*R34 + R36;
    double R46 = R12*R43 + R28*R44 + R29*R45;
    double R47 = pow(pow(R32, 2) + pow(R42, 2) + pow(R46, 2), -1.0/2.0);
    double R48 = pow(R2, -1.0/2.0);
    double R49 = R32*R48;
    double R50 = R46*R47;
    double R51 = R48*R6;
    double R52 = R42*R47;
    double R53 = R51*a1;
    double R54 = R47*R49*R6*b1 - R50*R51 + R52*R53;
    double R55 = 1.0/(1.0 - pow(R54, 2));
    double R56 = R55*(-R52*R54 + R53);
    double R57 = R56*R6;
    double R58 = R32*R47;
    double R59 = -plane_z;
    double R60 = R59 + panel_dz + panel_straw0z;
    double R61 = R23*panel_dx - R27*panel_dy + panel_straw0x;
    double R62 = R23*panel_dy + R27*panel_dx + panel_straw0y;
    double R63 = -R21 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R64 = R11*R23;
    double R65 = R11*R27;
    double R66 = -R14*R65 + R18*R64;
    double R67 = R14*R64 + R18*R65;
    double R68 = -panel_straw0z + wire_z;
    double R69 = R11*R15;
    double R70 = R17*R24 + R25;
    double R71 = R16*R17 - R19;
    double R72 = R23*R70 - R27*R71;
    double R73 = R23*R71 + R27*R70;
    double R74 = R13*R61 - R31*R62 + R59 - R60*R9 - R63*(-R13*R66 - R17*R9 + R31*R67) - R68*(-R13*R72 + R31*R73 + R69*R9) + b0 - plane_dz;
    double R75 = R51*b1;
    double R76 = R74*R75;
    double R77 = -R43*R60 - R44*R61 - R45*R62 - R63*(-R17*R43 + R44*R66 + R45*R67) - R68*(R43*R69 + R44*R72 + R45*R73) - plane_dy;
    double R78 = R51*R77;
    double R79 = -R37*R60 - R38*R61 - R41*R62 - R63*(-R17*R37 + R38*R66 + R41*R67) - R68*(R37*R69 + R38*R72 + R41*R73) + a0 - plane_dx;
    double R80 = R53*R79;
    double R81 = R50*R77 + R52*R79 + R58*R74;
    double R82 = R55*(-R54*(R76 - R78 + R80) + R81);
    double R83 = R55*(R54*R81 - R76 + R78 - R80);
    double R84 = -R58*R82 + R74 + R75*R83;
    double R85 = -R50*R82 - R51*R83 + R77;
    double R86 = -R52*R82 + R53*R83 + R79;
    double R87 = 2*R56;
    double R88 = 2*R55*(-R52 + R53*R54);
    double R89 = ((1.0/2.0)*R84*(-R58*R88 + R75*R87) + (1.0/2.0)*R85*(-R50*R88 - R51*R87) + (1.0/2.0)*R86*(-R52*R88 + R53*R87 - 2))/sqrt(pow(R84, 2) + pow(R85, 2) + pow(R86, 2));
    double R90 = R42*R48;
    double R91 = R46*R48;
    double R92 = R90 + R91*a1;
    double R93 = -R49*a1 + R90*b1;
    double R94 = -R49 - R91*b1;
    double R95 = pow(pow(R92, 2) + pow(R93, 2) + pow(R94, 2), -1.0/2.0);
    double result = R3*R57 + R4*R57 + R5*R57 + ((R74*R92*R95 + R77*R93*R95 + R79*R94*R95 > 0) ? (
   -R89
)
: (
   R89
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dy(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = cos(plane_a);
    double R8 = cos(plane_b);
    double R9 = R7*R8;
    double R10 = sin(panel_a);
    double R11 = cos(panel_b);
    double R12 = 1.0*R10*R11;
    double R13 = sin(plane_b);
    double R14 = sin(panel_g);
    double R15 = cos(panel_a);
    double R16 = R14*R15;
    double R17 = sin(panel_b);
    double R18 = cos(panel_g);
    double R19 = R10*R18;
    double R20 = -R16 + R17*R19;
    double R21 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R22 = 1.0/R21;
    double R23 = R22*panel_straw0x;
    double R24 = R15*R18;
    double R25 = R10*R14;
    double R26 = R17*R25 + R24;
    double R27 = R22*panel_straw0y;
    double R28 = 1.0*R20*R23 - 1.0*R26*R27;
    double R29 = 1.0*R20*R27 + 1.0*R23*R26;
    double R30 = sin(plane_a);
    double R31 = R30*R8;
    double R32 = R12*R9 - R13*R28 + R29*R31;
    double R33 = sin(plane_g);
    double R34 = R30*R33;
    double R35 = cos(plane_g);
    double R36 = R35*R7;
    double R37 = R13*R36 + R34;
    double R38 = R35*R8;
    double R39 = R33*R7;
    double R40 = R30*R35;
    double R41 = R13*R40 - R39;
    double R42 = R12*R37 + R28*R38 + R29*R41;
    double R43 = R13*R39 - R40;
    double R44 = R33*R8;
    double R45 = R13*R34 + R36;
    double R46 = R12*R43 + R28*R44 + R29*R45;
    double R47 = pow(pow(R32, 2) + pow(R42, 2) + pow(R46, 2), -1.0/2.0);
    double R48 = R32*R47;
    double R49 = pow(R2, -1.0/2.0);
    double R50 = R49*R6;
    double R51 = R50*b1;
    double R52 = R46*R47;
    double R53 = R42*R47;
    double R54 = R50*a1;
    double R55 = R48*R51 - R50*R52 + R53*R54;
    double R56 = 1.0/(1.0 - pow(R55, 2));
    double R57 = R56*(-R50 - R52*R55);
    double R58 = R57*R6;
    double R59 = -plane_z;
    double R60 = R59 + panel_dz + panel_straw0z;
    double R61 = R23*panel_dx - R27*panel_dy + panel_straw0x;
    double R62 = R23*panel_dy + R27*panel_dx + panel_straw0y;
    double R63 = -R21 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R64 = R11*R23;
    double R65 = R11*R27;
    double R66 = -R14*R65 + R18*R64;
    double R67 = R14*R64 + R18*R65;
    double R68 = -panel_straw0z + wire_z;
    double R69 = R11*R15;
    double R70 = R17*R24 + R25;
    double R71 = R16*R17 - R19;
    double R72 = R23*R70 - R27*R71;
    double R73 = R23*R71 + R27*R70;
    double R74 = R13*R61 - R31*R62 + R59 - R60*R9 - R63*(-R13*R66 - R17*R9 + R31*R67) - R68*(-R13*R72 + R31*R73 + R69*R9) + b0 - plane_dz;
    double R75 = R51*R74;
    double R76 = -R43*R60 - R44*R61 - R45*R62 - R63*(-R17*R43 + R44*R66 + R45*R67) - R68*(R43*R69 + R44*R72 + R45*R73) - plane_dy;
    double R77 = R50*R76;
    double R78 = -R37*R60 - R38*R61 - R41*R62 - R63*(-R17*R37 + R38*R66 + R41*R67) - R68*(R37*R69 + R38*R72 + R41*R73) + a0 - plane_dx;
    double R79 = R54*R78;
    double R80 = R48*R74 + R52*R76 + R53*R78;
    double R81 = R56*(-R55*(R75 - R77 + R79) + R80);
    double R82 = R56*(R55*R80 - R75 + R77 - R79);
    double R83 = -R48*R81 + R51*R82 + R74;
    double R84 = -R50*R82 - R52*R81 + R76;
    double R85 = -R53*R81 + R54*R82 + R78;
    double R86 = 2*R57;
    double R87 = 2*R56*(-R50*R55 - R52);
    double R88 = ((1.0/2.0)*R83*(-R48*R87 + R51*R86) + (1.0/2.0)*R84*(-R50*R86 - R52*R87 - 2) + (1.0/2.0)*R85*(-R53*R87 + R54*R86))/sqrt(pow(R83, 2) + pow(R84, 2) + pow(R85, 2));
    double R89 = R42*R49;
    double R90 = R46*R49;
    double R91 = R89 + R90*a1;
    double R92 = R32*R49;
    double R93 = R89*b1 - R92*a1;
    double R94 = -R90*b1 - R92;
    double R95 = pow(pow(R91, 2) + pow(R93, 2) + pow(R94, 2), -1.0/2.0);
    double result = R3*R58 + R4*R58 + R5*R58 + ((R74*R91*R95 + R76*R93*R95 + R78*R94*R95 > 0) ? (
   -R88
)
: (
   R88
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dz(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = cos(plane_a);
    double R8 = cos(plane_b);
    double R9 = R7*R8;
    double R10 = sin(panel_a);
    double R11 = cos(panel_b);
    double R12 = 1.0*R10*R11;
    double R13 = sin(plane_b);
    double R14 = sin(panel_g);
    double R15 = cos(panel_a);
    double R16 = R14*R15;
    double R17 = sin(panel_b);
    double R18 = cos(panel_g);
    double R19 = R10*R18;
    double R20 = -R16 + R17*R19;
    double R21 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R22 = 1.0/R21;
    double R23 = R22*panel_straw0x;
    double R24 = R15*R18;
    double R25 = R10*R14;
    double R26 = R17*R25 + R24;
    double R27 = R22*panel_straw0y;
    double R28 = 1.0*R20*R23 - 1.0*R26*R27;
    double R29 = 1.0*R20*R27 + 1.0*R23*R26;
    double R30 = sin(plane_a);
    double R31 = R30*R8;
    double R32 = R12*R9 - R13*R28 + R29*R31;
    double R33 = sin(plane_g);
    double R34 = R30*R33;
    double R35 = cos(plane_g);
    double R36 = R35*R7;
    double R37 = R13*R36 + R34;
    double R38 = R35*R8;
    double R39 = R33*R7;
    double R40 = R30*R35;
    double R41 = R13*R40 - R39;
    double R42 = R12*R37 + R28*R38 + R29*R41;
    double R43 = R13*R39 - R40;
    double R44 = R33*R8;
    double R45 = R13*R34 + R36;
    double R46 = R12*R43 + R28*R44 + R29*R45;
    double R47 = pow(pow(R32, 2) + pow(R42, 2) + pow(R46, 2), -1.0/2.0);
    double R48 = R32*R47;
    double R49 = pow(R2, -1.0/2.0);
    double R50 = R49*R6;
    double R51 = R50*b1;
    double R52 = R46*R47;
    double R53 = R42*R49;
    double R54 = R47*R53*R6*a1 + R48*R51 - R50*R52;
    double R55 = 1.0/(1.0 - pow(R54, 2));
    double R56 = R55*(-R48*R54 + R51);
    double R57 = R56*R6;
    double R58 = -plane_z;
    double R59 = R58 + panel_dz + panel_straw0z;
    double R60 = R23*panel_dx - R27*panel_dy + panel_straw0x;
    double R61 = R23*panel_dy + R27*panel_dx + panel_straw0y;
    double R62 = -R21 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R63 = R11*R23;
    double R64 = R11*R27;
    double R65 = -R14*R64 + R18*R63;
    double R66 = R14*R63 + R18*R64;
    double R67 = -panel_straw0z + wire_z;
    double R68 = R11*R15;
    double R69 = R17*R24 + R25;
    double R70 = R16*R17 - R19;
    double R71 = R23*R69 - R27*R70;
    double R72 = R23*R70 + R27*R69;
    double R73 = R13*R60 - R31*R61 + R58 - R59*R9 - R62*(-R13*R65 - R17*R9 + R31*R66) - R67*(-R13*R71 + R31*R72 + R68*R9) + b0 - plane_dz;
    double R74 = R51*R73;
    double R75 = -R43*R59 - R44*R60 - R45*R61 - R62*(-R17*R43 + R44*R65 + R45*R66) - R67*(R43*R68 + R44*R71 + R45*R72) - plane_dy;
    double R76 = R50*R75;
    double R77 = -R37*R59 - R38*R60 - R41*R61 - R62*(-R17*R37 + R38*R65 + R41*R66) - R67*(R37*R68 + R38*R71 + R41*R72) + a0 - plane_dx;
    double R78 = R50*a1;
    double R79 = R77*R78;
    double R80 = R42*R47;
    double R81 = R48*R73 + R52*R75 + R77*R80;
    double R82 = R55*(-R54*(R74 - R76 + R79) + R81);
    double R83 = R55*(R54*R81 - R74 + R76 - R79);
    double R84 = -R48*R82 + R51*R83 + R73;
    double R85 = -R50*R83 - R52*R82 + R75;
    double R86 = R77 + R78*R83 - R80*R82;
    double R87 = 2*R56;
    double R88 = 2*R55*(-R48 + R51*R54);
    double R89 = ((1.0/2.0)*R84*(-R48*R88 + R51*R87 - 2) + (1.0/2.0)*R85*(-R50*R87 - R52*R88) + (1.0/2.0)*R86*(R78*R87 - R80*R88))/sqrt(pow(R84, 2) + pow(R85, 2) + pow(R86, 2));
    double R90 = R46*R49;
    double R91 = R53 + R90*a1;
    double R92 = R32*R49;
    double R93 = R53*b1 - R92*a1;
    double R94 = -R90*b1 - R92;
    double R95 = pow(pow(R91, 2) + pow(R93, 2) + pow(R94, 2), -1.0/2.0);
    double result = R3*R57 + R4*R57 + R5*R57 + ((R73*R91*R95 + R75*R93*R95 + R77*R94*R95 > 0) ? (
   -R89
)
: (
   R89
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_a(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = R3*R6;
    double R8 = cos(plane_a);
    double R9 = cos(plane_b);
    double R10 = R8*R9;
    double R11 = sin(panel_a);
    double R12 = cos(panel_b);
    double R13 = R11*R12;
    double R14 = 1.0*R13;
    double R15 = sin(plane_b);
    double R16 = sin(panel_g);
    double R17 = cos(panel_a);
    double R18 = R16*R17;
    double R19 = sin(panel_b);
    double R20 = cos(panel_g);
    double R21 = R11*R20;
    double R22 = -R18 + R19*R21;
    double R23 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R24 = 1.0/R23;
    double R25 = R24*panel_straw0x;
    double R26 = R17*R20;
    double R27 = R11*R16;
    double R28 = R19*R27 + R26;
    double R29 = R24*panel_straw0y;
    double R30 = 1.0*R22*R25 - 1.0*R28*R29;
    double R31 = R25*R28;
    double R32 = R22*R29;
    double R33 = R31 + R32;
    double R34 = 1.0*R33;
    double R35 = sin(plane_a);
    double R36 = R35*R9;
    double R37 = R10*R14 - R15*R30 + R34*R36;
    double R38 = sin(plane_g);
    double R39 = R35*R38;
    double R40 = cos(plane_g);
    double R41 = R40*R8;
    double R42 = R15*R41;
    double R43 = R39 + R42;
    double R44 = R40*R9;
    double R45 = R38*R8;
    double R46 = R35*R40;
    double R47 = R15*R46;
    double R48 = -R45 + R47;
    double R49 = R14*R43 + R30*R44 + R34*R48;
    double R50 = R15*R45;
    double R51 = -R46 + R50;
    double R52 = R38*R9;
    double R53 = R15*R39;
    double R54 = R41 + R53;
    double R55 = R14*R51 + R30*R52 + R34*R54;
    double R56 = pow(R37, 2) + pow(R49, 2) + pow(R55, 2);
    double R57 = pow(R56, -1.0/2.0);
    double R58 = R57*R6;
    double R59 = pow(R2, -1.0/2.0);
    double R60 = R37*R59;
    double R61 = R60*b1;
    double R62 = R59*R6;
    double R63 = R55*R57;
    double R64 = R49*R59;
    double R65 = R64*a1;
    double R66 = R58*R61 + R58*R65 - R62*R63;
    double R67 = -plane_z;
    double R68 = R67 + panel_dz + panel_straw0z;
    double R69 = R25*panel_dx - R29*panel_dy + panel_straw0x;
    double R70 = R29*panel_dx;
    double R71 = R25*panel_dy;
    double R72 = R70 + R71 + panel_straw0y;
    double R73 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R74 = -R23 + R73;
    double R75 = R12*R25;
    double R76 = R12*R29;
    double R77 = -R16*R76 + R20*R75;
    double R78 = R16*R75 + R20*R76;
    double R79 = -panel_straw0z;
    double R80 = R79 + wire_z;
    double R81 = R12*R17;
    double R82 = R19*R26 + R27;
    double R83 = R18*R19 - R21;
    double R84 = R25*R82 - R29*R83;
    double R85 = R25*R83 + R29*R82;
    double R86 = -R10*R68 + R15*R69 - R36*R72 + R67 - R74*(-R10*R19 - R15*R77 + R36*R78) - R80*(R10*R81 - R15*R84 + R36*R85) + b0 - plane_dz;
    double R87 = R57*R86;
    double R88 = -R51*R68 - R52*R69 - R54*R72 - R74*(-R19*R51 + R52*R77 + R54*R78) - R80*(R51*R81 + R52*R84 + R54*R85) - plane_dy;
    double R89 = R57*R88;
    double R90 = -R43*R68 - R44*R69 - R48*R72 - R74*(-R19*R43 + R44*R77 + R48*R78) - R80*(R43*R81 + R44*R84 + R48*R85) + a0 - plane_dx;
    double R91 = R57*R90;
    double R92 = R37*R87 + R49*R91 + R55*R89;
    double R93 = R62*b1;
    double R94 = R86*R93;
    double R95 = R62*R88;
    double R96 = R62*a1;
    double R97 = R90*R96;
    double R98 = -R94 + R95 - R97;
    double R99 = R66*R92 + R98;
    double R100 = 1.0 - pow(R66, 2);
    double R101 = R10*(1.0*R31 + 1.0*R32);
    double R102 = R101 - R14*R36;
    double R103 = R102*R57;
    double R104 = R103*R93;
    double R105 = R13*(-1.0*R41 - 1.0*R53);
    double R106 = R33*(-1.0*R46 + 1.0*R50);
    double R107 = R105 + R106;
    double R108 = R107*R57;
    double R109 = R108*R62;
    double R110 = R13*(1.0*R45 - 1.0*R47);
    double R111 = R33*(1.0*R39 + 1.0*R42);
    double R112 = R110 + R111;
    double R113 = R112*R57;
    double R114 = R113*R96;
    double R115 = (-1.0/2.0*R37*(2*R101 - 2.0*R13*R36) - 1.0/2.0*R49*(2*R110 + 2*R111) - 1.0/2.0*R55*(2*R105 + 2*R106))/pow(R56, 3.0/2.0);
    double R116 = R115*R6;
    double R117 = R116*R61;
    double R118 = R115*R55;
    double R119 = R118*R62;
    double R120 = R116*R65;
    double R121 = R66*(2*R104 - 2*R109 + 2*R114 + 2*R117 - 2*R119 + 2*R120)/pow(R100, 2);
    double R122 = R121*R99;
    double R123 = R122*R6;
    double R124 = 1.0/R100;
    double R125 = R104 - R109 + R114 + R117 - R119 + R120;
    double R126 = R36*(R79 - panel_dz + plane_z);
    double R127 = R10*(-R70 - R71 - panel_straw0y);
    double R128 = R23 - R73;
    double R129 = R128*(R10*R78 + R19*R36);
    double R130 = panel_straw0z - wire_z;
    double R131 = R130*(R10*R85 - R36*R81);
    double R132 = -R126 + R127 + R129 + R131;
    double R133 = R37*R57;
    double R134 = R48*R68;
    double R135 = R72*(-R39 - R42);
    double R136 = R128*(R19*R48 + R43*R78);
    double R137 = R130*(R43*R85 + R81*(R45 - R47));
    double R138 = R134 + R135 + R136 + R137;
    double R139 = R49*R57;
    double R140 = R54*R68;
    double R141 = R72*(R46 - R50);
    double R142 = R128*(R19*R54 + R51*R78);
    double R143 = R130*(R51*R85 + R81*(-R41 - R53));
    double R144 = R140 + R141 + R142 + R143;
    double R145 = R115*R37;
    double R146 = R115*R49;
    double R147 = R102*R87 + R107*R89 + R112*R91 + R118*R88 + R132*R133 + R138*R139 + R144*R63 + R145*R86 + R146*R90;
    double R148 = -R132*R93 - R138*R96 + R144*R62;
    double R149 = R124*(R125*R92 + R147*R66 + R148);
    double R150 = R149*R6;
    double R151 = -R66*(R94 - R95 + R97) + R92;
    double R152 = R124*R151;
    double R153 = R124*R99;
    double R154 = -R133*R152 + R153*R93 + R86;
    double R155 = -R152*R63 - R153*R62 + R88;
    double R156 = -R139*R152 + R153*R96 + R90;
    double R157 = 2*R152;
    double R158 = 2*R122;
    double R159 = R121*R151;
    double R160 = 2*R159;
    double R161 = R124*(R125*R98 + R147 + R148*R66);
    double R162 = 2*R161;
    double R163 = 2*R149;
    double R164 = 2*R63;
    double R165 = ((1.0/2.0)*R154*(-R103*R157 - 2*R126 + 2*R127 + 2*R129 + 2*R131 - R133*R160 - R133*R162 - R145*R157 + R158*R93 + R163*R93) + (1.0/2.0)*R155*(-R108*R157 - R118*R157 + 2*R140 + 2*R141 + 2*R142 + 2*R143 - R158*R62 - R159*R164 - R161*R164 - R163*R62) + (1.0/2.0)*R156*(-R113*R157 + 2*R134 + 2*R135 + 2*R136 + 2*R137 - R139*R160 - R139*R162 - R146*R157 + R158*R96 + R163*R96))/sqrt(pow(R154, 2) + pow(R155, 2) + pow(R156, 2));
    double R166 = R55*R59;
    double R167 = R166*a1 + R64;
    double R168 = -R60*a1 + R64*b1;
    double R169 = -R166*b1 - R60;
    double R170 = pow(pow(R167, 2) + pow(R168, 2) + pow(R169, 2), -1.0/2.0);
    double result = R122*R7 + R123*R4 + R123*R5 + R149*R7 + R150*R4 + R150*R5 + ((R167*R170*R86 + R168*R170*R88 + R169*R170*R90 > 0) ? (
   -R165
)
: (
   R165
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_b(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = R3*R6;
    double R8 = cos(plane_a);
    double R9 = cos(plane_b);
    double R10 = R8*R9;
    double R11 = sin(panel_a);
    double R12 = cos(panel_b);
    double R13 = R11*R12;
    double R14 = 1.0*R13;
    double R15 = sin(plane_b);
    double R16 = sin(panel_g);
    double R17 = cos(panel_a);
    double R18 = R16*R17;
    double R19 = sin(panel_b);
    double R20 = cos(panel_g);
    double R21 = R11*R20;
    double R22 = -R18 + R19*R21;
    double R23 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R24 = 1.0/R23;
    double R25 = R24*panel_straw0x;
    double R26 = R22*R25;
    double R27 = R17*R20;
    double R28 = R11*R16;
    double R29 = R19*R28 + R27;
    double R30 = R24*panel_straw0y;
    double R31 = R29*R30;
    double R32 = 1.0*R26 - 1.0*R31;
    double R33 = R25*R29;
    double R34 = R22*R30;
    double R35 = R33 + R34;
    double R36 = 1.0*R35;
    double R37 = sin(plane_a);
    double R38 = R37*R9;
    double R39 = R10*R14 - R15*R32 + R36*R38;
    double R40 = sin(plane_g);
    double R41 = R37*R40;
    double R42 = cos(plane_g);
    double R43 = R42*R8;
    double R44 = R15*R43 + R41;
    double R45 = R42*R9;
    double R46 = R40*R8;
    double R47 = R37*R42;
    double R48 = R15*R47 - R46;
    double R49 = R14*R44 + R32*R45 + R36*R48;
    double R50 = R15*R46 - R47;
    double R51 = R40*R9;
    double R52 = R15*R41 + R43;
    double R53 = R14*R50 + R32*R51 + R36*R52;
    double R54 = pow(R39, 2) + pow(R49, 2) + pow(R53, 2);
    double R55 = pow(R54, -1.0/2.0);
    double R56 = R55*R6;
    double R57 = pow(R2, -1.0/2.0);
    double R58 = R39*R57;
    double R59 = R58*b1;
    double R60 = R53*R55;
    double R61 = R57*R6;
    double R62 = R49*R57;
    double R63 = R62*a1;
    double R64 = R56*R59 + R56*R63 - R60*R61;
    double R65 = -plane_z;
    double R66 = R65 + panel_dz + panel_straw0z;
    double R67 = R25*panel_dx;
    double R68 = R30*panel_dy;
    double R69 = R67 - R68 + panel_straw0x;
    double R70 = R30*panel_dx;
    double R71 = R25*panel_dy;
    double R72 = R70 + R71 + panel_straw0y;
    double R73 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R74 = -R23 + R73;
    double R75 = R12*R25;
    double R76 = R20*R75;
    double R77 = R12*R30;
    double R78 = R16*R77;
    double R79 = R76 - R78;
    double R80 = R15*R79;
    double R81 = R16*R75 + R20*R77;
    double R82 = -panel_straw0z;
    double R83 = R82 + wire_z;
    double R84 = R12*R17;
    double R85 = R19*R27 + R28;
    double R86 = R25*R85;
    double R87 = R18*R19 - R21;
    double R88 = R30*R87;
    double R89 = R86 - R88;
    double R90 = R15*R89;
    double R91 = R25*R87 + R30*R85;
    double R92 = -R10*R66 + R15*R69 - R38*R72 + R65 - R74*(-R10*R19 + R38*R81 - R80) - R83*(R10*R84 + R38*R91 - R90) + b0 - plane_dz;
    double R93 = R55*R92;
    double R94 = R69*R9;
    double R95 = -R40*R94 - R50*R66 - R52*R72 - R74*(-R19*R50 + R51*R79 + R52*R81) - R83*(R50*R84 + R51*R89 + R52*R91) - plane_dy;
    double R96 = -R42*R94 - R44*R66 - R48*R72 - R74*(-R19*R44 + R45*R79 + R48*R81) - R83*(R44*R84 + R45*R89 + R48*R91) + a0 - plane_dx;
    double R97 = R49*R55;
    double R98 = R39*R93 + R60*R95 + R96*R97;
    double R99 = R61*b1;
    double R100 = R92*R99;
    double R101 = R61*R95;
    double R102 = R61*a1;
    double R103 = R102*R96;
    double R104 = -R100 + R101 - R103;
    double R105 = R104 + R64*R98;
    double R106 = 1.0 - pow(R64, 2);
    double R107 = R15*R8;
    double R108 = 1.0*R31;
    double R109 = 1.0*R26;
    double R110 = R9*(R108 - R109);
    double R111 = R15*R37;
    double R112 = R111*(1.0*R33 + 1.0*R34);
    double R113 = -R107*R14 + R110 - R112;
    double R114 = R113*R55;
    double R115 = R114*R99;
    double R116 = R46*R9;
    double R117 = R15*(-R108 + R109);
    double R118 = R117*R40;
    double R119 = R41*R9;
    double R120 = R55*(R116*R14 - R118 + R119*R36);
    double R121 = R120*R61;
    double R122 = R43*R9;
    double R123 = R117*R42;
    double R124 = R47*R9;
    double R125 = R55*(R122*R14 - R123 + R124*R36);
    double R126 = R102*R125;
    double R127 = 2.0*R13;
    double R128 = 2.0*R35;
    double R129 = (-1.0/2.0*R39*(-R107*R127 + 2*R110 - 2*R112) - 1.0/2.0*R49*(R122*R127 - 2*R123 + R124*R128) - 1.0/2.0*R53*(R116*R127 - 2*R118 + R119*R128))/pow(R54, 3.0/2.0);
    double R130 = R129*R6;
    double R131 = R130*R59;
    double R132 = R129*R53;
    double R133 = R132*R61;
    double R134 = R130*R63;
    double R135 = R64*(2*R115 - 2*R121 + 2*R126 + 2*R131 - 2*R133 + 2*R134)/pow(R106, 2);
    double R136 = R105*R135;
    double R137 = R136*R6;
    double R138 = 1.0/R106;
    double R139 = R115 - R121 + R126 + R131 - R133 + R134;
    double R140 = R107*(R82 - panel_dz + plane_z);
    double R141 = R111*(-R70 - R71 - panel_straw0y);
    double R142 = R23 - R73;
    double R143 = R142*(R107*R19 - R111*R81 + R9*(-R76 + R78));
    double R144 = panel_straw0z - wire_z;
    double R145 = R144*(-R107*R84 - R111*R91 + R9*(-R86 + R88));
    double R146 = -R140 - R141 + R143 + R145 + R94;
    double R147 = R39*R55;
    double R148 = R122*R66;
    double R149 = R124*R72;
    double R150 = R15*(-R67 + R68 - panel_straw0x);
    double R151 = R150*R42;
    double R152 = R142*(-R122*R19 + R124*R81 - R42*R80);
    double R153 = R144*(R122*R84 + R124*R91 - R42*R90);
    double R154 = -R148 - R149 - R151 + R152 + R153;
    double R155 = R116*R66;
    double R156 = R119*R72;
    double R157 = R150*R40;
    double R158 = R142*(-R116*R19 + R119*R81 - R40*R80);
    double R159 = R144*(R116*R84 + R119*R91 - R40*R90);
    double R160 = -R155 - R156 - R157 + R158 + R159;
    double R161 = R129*R39;
    double R162 = R129*R49;
    double R163 = R113*R93 + R120*R95 + R125*R96 + R132*R95 + R146*R147 + R154*R97 + R160*R60 + R161*R92 + R162*R96;
    double R164 = -R102*R154 - R146*R99 + R160*R61;
    double R165 = R138*(R139*R98 + R163*R64 + R164);
    double R166 = R165*R6;
    double R167 = -R64*(R100 - R101 + R103) + R98;
    double R168 = R138*R167;
    double R169 = R105*R138;
    double R170 = -R147*R168 + R169*R99 + R92;
    double R171 = -R168*R60 - R169*R61 + R95;
    double R172 = R102*R169 - R168*R97 + R96;
    double R173 = 2*R168;
    double R174 = 2*R136;
    double R175 = R135*R167;
    double R176 = 2*R175;
    double R177 = R138*(R104*R139 + R163 + R164*R64);
    double R178 = 2*R177;
    double R179 = 2*R165;
    double R180 = 2*R60;
    double R181 = ((1.0/2.0)*R170*(-R114*R173 - 2*R140 - 2*R141 + 2*R143 + 2*R145 - R147*R176 - R147*R178 - R161*R173 + R174*R99 + R179*R99 + 2*R94) + (1.0/2.0)*R171*(-R120*R173 - R132*R173 - 2*R155 - 2*R156 - 2*R157 + 2*R158 + 2*R159 - R174*R61 - R175*R180 - R177*R180 - R179*R61) + (1.0/2.0)*R172*(R102*R174 + R102*R179 - R125*R173 - 2*R148 - 2*R149 - 2*R151 + 2*R152 + 2*R153 - R162*R173 - R176*R97 - R178*R97))/sqrt(pow(R170, 2) + pow(R171, 2) + pow(R172, 2));
    double R182 = R53*R57;
    double R183 = R182*a1 + R62;
    double R184 = -R58*a1 + R62*b1;
    double R185 = -R182*b1 - R58;
    double R186 = pow(pow(R183, 2) + pow(R184, 2) + pow(R185, 2), -1.0/2.0);
    double result = R136*R7 + R137*R4 + R137*R5 + R165*R7 + R166*R4 + R166*R5 + ((R183*R186*R92 + R184*R186*R95 + R185*R186*R96 > 0) ? (
   -R181
)
: (
   R181
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_g(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = R3*R6;
    double R8 = cos(plane_a);
    double R9 = cos(plane_b);
    double R10 = R8*R9;
    double R11 = sin(panel_a);
    double R12 = cos(panel_b);
    double R13 = R11*R12;
    double R14 = 1.0*R13;
    double R15 = sin(plane_b);
    double R16 = sin(panel_g);
    double R17 = cos(panel_a);
    double R18 = R16*R17;
    double R19 = sin(panel_b);
    double R20 = cos(panel_g);
    double R21 = R11*R20;
    double R22 = -R18 + R19*R21;
    double R23 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R24 = 1.0/R23;
    double R25 = R24*panel_straw0x;
    double R26 = R22*R25;
    double R27 = R17*R20;
    double R28 = R11*R16;
    double R29 = R19*R28 + R27;
    double R30 = R24*panel_straw0y;
    double R31 = R29*R30;
    double R32 = 1.0*R26 - 1.0*R31;
    double R33 = R22*R30 + R25*R29;
    double R34 = 1.0*R33;
    double R35 = sin(plane_a);
    double R36 = R35*R9;
    double R37 = R10*R14 - R15*R32 + R34*R36;
    double R38 = sin(plane_g);
    double R39 = R35*R38;
    double R40 = cos(plane_g);
    double R41 = R40*R8;
    double R42 = R15*R41;
    double R43 = R39 + R42;
    double R44 = R40*R9;
    double R45 = R38*R8;
    double R46 = R35*R40;
    double R47 = R15*R46;
    double R48 = -R45 + R47;
    double R49 = R14*R43 + R32*R44 + R34*R48;
    double R50 = R15*R45;
    double R51 = -R46 + R50;
    double R52 = R38*R9;
    double R53 = R15*R39;
    double R54 = R41 + R53;
    double R55 = R14*R51 + R32*R52 + R34*R54;
    double R56 = pow(R37, 2) + pow(R49, 2) + pow(R55, 2);
    double R57 = pow(R56, -1.0/2.0);
    double R58 = R57*R6;
    double R59 = pow(R2, -1.0/2.0);
    double R60 = R37*R59;
    double R61 = R60*b1;
    double R62 = R59*R6;
    double R63 = R55*R57;
    double R64 = R49*R59;
    double R65 = R64*a1;
    double R66 = R58*R61 + R58*R65 - R62*R63;
    double R67 = -plane_z;
    double R68 = R67 + panel_dz + panel_straw0z;
    double R69 = R25*panel_dx;
    double R70 = R30*panel_dy;
    double R71 = R69 - R70 + panel_straw0x;
    double R72 = R25*panel_dy + R30*panel_dx + panel_straw0y;
    double R73 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R74 = -R23 + R73;
    double R75 = R12*R25;
    double R76 = R12*R30;
    double R77 = -R16*R76 + R20*R75;
    double R78 = R16*R75 + R20*R76;
    double R79 = -panel_straw0z + wire_z;
    double R80 = R12*R17;
    double R81 = R19*R27 + R28;
    double R82 = R18*R19 - R21;
    double R83 = R25*R81 - R30*R82;
    double R84 = R25*R82 + R30*R81;
    double R85 = -R10*R68 + R15*R71 - R36*R72 + R67 - R74*(-R10*R19 - R15*R77 + R36*R78) - R79*(R10*R80 - R15*R83 + R36*R84) + b0 - plane_dz;
    double R86 = R37*R57;
    double R87 = R51*R68;
    double R88 = R54*R72;
    double R89 = R19*R51;
    double R90 = R52*R77;
    double R91 = R52*R83;
    double R92 = -R52*R71 - R74*(R54*R78 - R89 + R90) - R79*(R51*R80 + R54*R84 + R91) - R87 - R88 - plane_dy;
    double R93 = R57*R92;
    double R94 = R44*R77 + R48*R78;
    double R95 = R43*R80 + R44*R83 + R48*R84;
    double R96 = -R43*R68 - R44*R71 - R48*R72 - R74*(-R19*R43 + R94) - R79*R95 + a0 - plane_dx;
    double R97 = R57*R96;
    double R98 = R49*R97 + R55*R93 + R85*R86;
    double R99 = R62*b1;
    double R100 = R85*R99;
    double R101 = R62*R92;
    double R102 = R62*a1;
    double R103 = R102*R96;
    double R104 = -R100 + R101 - R103;
    double R105 = R104 + R66*R98;
    double R106 = 1.0 - pow(R66, 2);
    double R107 = R13*(1.0*R39 + 1.0*R42);
    double R108 = 1.0*R26 - 1.0*R31;
    double R109 = R108*R44;
    double R110 = R33*(-1.0*R45 + 1.0*R47);
    double R111 = R107 + R109 + R110;
    double R112 = R111*R57;
    double R113 = R112*R62;
    double R114 = R13*(1.0*R46 - 1.0*R50);
    double R115 = R108*R52;
    double R116 = R33*(-1.0*R41 - 1.0*R53);
    double R117 = R114 - R115 + R116;
    double R118 = R117*R57;
    double R119 = R102*R118;
    double R120 = (-1.0/2.0*R49*(2*R114 - 2*R115 + 2*R116) - 1.0/2.0*R55*(2*R107 + 2*R109 + 2*R110))/pow(R56, 3.0/2.0);
    double R121 = R120*R6;
    double R122 = R121*R61;
    double R123 = R120*R55;
    double R124 = R123*R62;
    double R125 = R121*R65;
    double R126 = R66*(-2*R113 + 2*R119 + 2*R122 - 2*R124 + 2*R125)/pow(R106, 2);
    double R127 = R105*R126;
    double R128 = R127*R6;
    double R129 = 1.0/R106;
    double R130 = -R113 + R119 + R122 - R124 + R125;
    double R131 = -R39 - R42;
    double R132 = R131*R68;
    double R133 = -R69 + R70 - panel_straw0x;
    double R134 = R133*R44;
    double R135 = R72*(R45 - R47);
    double R136 = R23 - R73;
    double R137 = R136*(R131*R19 + R94);
    double R138 = panel_straw0z - wire_z;
    double R139 = R138*R95;
    double R140 = R132 + R134 + R135 + R137 + R139;
    double R141 = R133*R52;
    double R142 = -R41 - R53;
    double R143 = R136*(R142*R78 + R89 - R90);
    double R144 = R138*(R142*R84 + R80*(R46 - R50) - R91);
    double R145 = -R141 + R143 + R144 + R87 + R88;
    double R146 = R49*R57;
    double R147 = R120*R37;
    double R148 = R120*R49;
    double R149 = R111*R93 + R117*R97 + R123*R92 + R140*R63 + R145*R146 + R147*R85 + R148*R96;
    double R150 = -R102*R145 + R140*R62;
    double R151 = R129*(R130*R98 + R149*R66 + R150);
    double R152 = R151*R6;
    double R153 = -R66*(R100 - R101 + R103) + R98;
    double R154 = R129*R153;
    double R155 = R105*R129;
    double R156 = -R154*R86 + R155*R99 + R85;
    double R157 = -R154*R63 - R155*R62 + R92;
    double R158 = R102*R155 - R146*R154 + R96;
    double R159 = 2*R154;
    double R160 = 2*R127;
    double R161 = 2*R86;
    double R162 = R126*R153;
    double R163 = R129*(R104*R130 + R149 + R150*R66);
    double R164 = 2*R151;
    double R165 = 2*R162;
    double R166 = 2*R163;
    double R167 = ((1.0/2.0)*R156*(-R147*R159 + R160*R99 - R161*R162 - R161*R163 + R164*R99) + (1.0/2.0)*R157*(-R112*R159 - R123*R159 + 2*R132 + 2*R134 + 2*R135 + 2*R137 + 2*R139 - R160*R62 - R164*R62 - R165*R63 - R166*R63) + (1.0/2.0)*R158*(R102*R160 + R102*R164 - R118*R159 - 2*R141 + 2*R143 + 2*R144 - R146*R165 - R146*R166 - R148*R159 + 2*R87 + 2*R88))/sqrt(pow(R156, 2) + pow(R157, 2) + pow(R158, 2));
    double R168 = R55*R59;
    double R169 = R168*a1 + R64;
    double R170 = -R60*a1 + R64*b1;
    double R171 = -R168*b1 - R60;
    double R172 = pow(pow(R169, 2) + pow(R170, 2) + pow(R171, 2), -1.0/2.0);
    double result = R127*R7 + R128*R4 + R128*R5 + R151*R7 + R152*R4 + R152*R5 + ((R169*R172*R85 + R170*R172*R92 + R171*R172*R96 > 0) ? (
   -R167
)
: (
   R167
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dx(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = pow(R2, -1.0/2.0);
    double R8 = cos(plane_a);
    double R9 = cos(plane_b);
    double R10 = R8*R9;
    double R11 = sin(panel_a);
    double R12 = cos(panel_b);
    double R13 = 1.0*R11*R12;
    double R14 = sin(plane_b);
    double R15 = sin(panel_g);
    double R16 = cos(panel_a);
    double R17 = R15*R16;
    double R18 = sin(panel_b);
    double R19 = cos(panel_g);
    double R20 = R11*R19;
    double R21 = -R17 + R18*R20;
    double R22 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R23 = 1.0/R22;
    double R24 = R23*panel_straw0x;
    double R25 = R16*R19;
    double R26 = R11*R15;
    double R27 = R18*R26 + R25;
    double R28 = R23*panel_straw0y;
    double R29 = 1.0*R21*R24 - 1.0*R27*R28;
    double R30 = 1.0*R21*R28 + 1.0*R24*R27;
    double R31 = sin(plane_a);
    double R32 = R31*R9;
    double R33 = R10*R13 - R14*R29 + R30*R32;
    double R34 = R33*R7;
    double R35 = sin(plane_g);
    double R36 = R31*R35;
    double R37 = cos(plane_g);
    double R38 = R37*R8;
    double R39 = R14*R38 + R36;
    double R40 = R37*R9;
    double R41 = R35*R8;
    double R42 = R31*R37;
    double R43 = R14*R42;
    double R44 = -R41 + R43;
    double R45 = R13*R39 + R29*R40 + R30*R44;
    double R46 = R14*R41 - R42;
    double R47 = R35*R9;
    double R48 = R14*R36;
    double R49 = R38 + R48;
    double R50 = R13*R46 + R29*R47 + R30*R49;
    double R51 = pow(pow(R33, 2) + pow(R45, 2) + pow(R50, 2), -1.0/2.0);
    double R52 = R51*R6;
    double R53 = R50*R51;
    double R54 = R6*R7;
    double R55 = R45*R7;
    double R56 = R34*R52*b1 + R52*R55*a1 - R53*R54;
    double R57 = 1.0/(1.0 - pow(R56, 2));
    double R58 = R14*R24;
    double R59 = R28*R32;
    double R60 = R58 - R59;
    double R61 = R33*R51;
    double R62 = R24*R40;
    double R63 = R28*(R41 - R43);
    double R64 = -R62 + R63;
    double R65 = R45*R51;
    double R66 = R24*R47;
    double R67 = R28*(-R38 - R48);
    double R68 = -R66 + R67;
    double R69 = R53*R68 + R60*R61 + R64*R65;
    double R70 = R54*b1;
    double R71 = R54*a1;
    double R72 = R54*R68 - R60*R70 - R64*R71;
    double R73 = R57*(R56*R69 + R72);
    double R74 = R6*R73;
    double R75 = -plane_z;
    double R76 = R75 + panel_dz + panel_straw0z;
    double R77 = R24*panel_dx - R28*panel_dy + panel_straw0x;
    double R78 = R24*panel_dy + R28*panel_dx + panel_straw0y;
    double R79 = -R22 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R80 = R12*R24;
    double R81 = R12*R28;
    double R82 = -R15*R81 + R19*R80;
    double R83 = R15*R80 + R19*R81;
    double R84 = -panel_straw0z + wire_z;
    double R85 = R12*R16;
    double R86 = R18*R25 + R26;
    double R87 = R17*R18 - R20;
    double R88 = R24*R86 - R28*R87;
    double R89 = R24*R87 + R28*R86;
    double R90 = -R10*R76 + R14*R77 - R32*R78 + R75 - R79*(-R10*R18 - R14*R82 + R32*R83) - R84*(R10*R85 - R14*R88 + R32*R89) + b0 - plane_dz;
    double R91 = R70*R90;
    double R92 = -R46*R76 - R47*R77 - R49*R78 - R79*(-R18*R46 + R47*R82 + R49*R83) - R84*(R46*R85 + R47*R88 + R49*R89) - plane_dy;
    double R93 = R54*R92;
    double R94 = -R39*R76 - R40*R77 - R44*R78 - R79*(-R18*R39 + R40*R82 + R44*R83) - R84*(R39*R85 + R40*R88 + R44*R89) + a0 - plane_dx;
    double R95 = R71*R94;
    double R96 = R53*R92 + R61*R90 + R65*R94;
    double R97 = R57*(-R56*(R91 - R93 + R95) + R96);
    double R98 = R57*(R56*R96 - R91 + R93 - R95);
    double R99 = -R61*R97 + R70*R98 + R90;
    double R100 = -R53*R97 - R54*R98 + R92;
    double R101 = -R65*R97 + R71*R98 + R94;
    double R102 = 2*R73;
    double R103 = 2*R57*(R56*R72 + R69);
    double R104 = ((1.0/2.0)*R100*(-R102*R54 - R103*R53 - 2*R66 + 2*R67) + (1.0/2.0)*R101*(R102*R71 - R103*R65 - 2*R62 + 2*R63) + (1.0/2.0)*R99*(R102*R70 - R103*R61 + 2*R58 - 2*R59))/sqrt(pow(R100, 2) + pow(R101, 2) + pow(R99, 2));
    double R105 = R50*R7;
    double R106 = R105*a1 + R55;
    double R107 = -R34*a1 + R55*b1;
    double R108 = -R105*b1 - R34;
    double R109 = pow(pow(R106, 2) + pow(R107, 2) + pow(R108, 2), -1.0/2.0);
    double result = R3*R74 + R4*R74 + R5*R74 + ((R106*R109*R90 + R107*R109*R92 + R108*R109*R94 > 0) ? (
   -R104
)
: (
   R104
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dy(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = pow(R2, -1.0/2.0);
    double R8 = cos(plane_a);
    double R9 = cos(plane_b);
    double R10 = R8*R9;
    double R11 = sin(panel_a);
    double R12 = cos(panel_b);
    double R13 = 1.0*R11*R12;
    double R14 = sin(plane_b);
    double R15 = sin(panel_g);
    double R16 = cos(panel_a);
    double R17 = R15*R16;
    double R18 = sin(panel_b);
    double R19 = cos(panel_g);
    double R20 = R11*R19;
    double R21 = -R17 + R18*R20;
    double R22 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R23 = 1.0/R22;
    double R24 = R23*panel_straw0x;
    double R25 = R16*R19;
    double R26 = R11*R15;
    double R27 = R18*R26 + R25;
    double R28 = R23*panel_straw0y;
    double R29 = 1.0*R21*R24 - 1.0*R27*R28;
    double R30 = 1.0*R21*R28 + 1.0*R24*R27;
    double R31 = sin(plane_a);
    double R32 = R31*R9;
    double R33 = R10*R13 - R14*R29 + R30*R32;
    double R34 = R33*R7;
    double R35 = sin(plane_g);
    double R36 = R31*R35;
    double R37 = cos(plane_g);
    double R38 = R37*R8;
    double R39 = R14*R38 + R36;
    double R40 = R37*R9;
    double R41 = R35*R8;
    double R42 = R31*R37;
    double R43 = R14*R42;
    double R44 = -R41 + R43;
    double R45 = R13*R39 + R29*R40 + R30*R44;
    double R46 = R14*R41 - R42;
    double R47 = R35*R9;
    double R48 = R14*R36;
    double R49 = R38 + R48;
    double R50 = R13*R46 + R29*R47 + R30*R49;
    double R51 = pow(pow(R33, 2) + pow(R45, 2) + pow(R50, 2), -1.0/2.0);
    double R52 = R51*R6;
    double R53 = R50*R51;
    double R54 = R6*R7;
    double R55 = R45*R7;
    double R56 = R34*R52*b1 + R52*R55*a1 - R53*R54;
    double R57 = 1.0/(1.0 - pow(R56, 2));
    double R58 = R14*R28;
    double R59 = R24*R32;
    double R60 = -R58 - R59;
    double R61 = R33*R51;
    double R62 = R28*R40;
    double R63 = R24*(R41 - R43);
    double R64 = R62 + R63;
    double R65 = R45*R51;
    double R66 = R28*R47;
    double R67 = R24*(-R38 - R48);
    double R68 = R66 + R67;
    double R69 = R53*R68 + R60*R61 + R64*R65;
    double R70 = R54*b1;
    double R71 = R54*a1;
    double R72 = R54*R68 - R60*R70 - R64*R71;
    double R73 = R57*(R56*R69 + R72);
    double R74 = R6*R73;
    double R75 = -plane_z;
    double R76 = R75 + panel_dz + panel_straw0z;
    double R77 = R24*panel_dx - R28*panel_dy + panel_straw0x;
    double R78 = R24*panel_dy + R28*panel_dx + panel_straw0y;
    double R79 = -R22 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R80 = R12*R24;
    double R81 = R12*R28;
    double R82 = -R15*R81 + R19*R80;
    double R83 = R15*R80 + R19*R81;
    double R84 = -panel_straw0z + wire_z;
    double R85 = R12*R16;
    double R86 = R18*R25 + R26;
    double R87 = R17*R18 - R20;
    double R88 = R24*R86 - R28*R87;
    double R89 = R24*R87 + R28*R86;
    double R90 = -R10*R76 + R14*R77 - R32*R78 + R75 - R79*(-R10*R18 - R14*R82 + R32*R83) - R84*(R10*R85 - R14*R88 + R32*R89) + b0 - plane_dz;
    double R91 = R70*R90;
    double R92 = -R46*R76 - R47*R77 - R49*R78 - R79*(-R18*R46 + R47*R82 + R49*R83) - R84*(R46*R85 + R47*R88 + R49*R89) - plane_dy;
    double R93 = R54*R92;
    double R94 = -R39*R76 - R40*R77 - R44*R78 - R79*(-R18*R39 + R40*R82 + R44*R83) - R84*(R39*R85 + R40*R88 + R44*R89) + a0 - plane_dx;
    double R95 = R71*R94;
    double R96 = R53*R92 + R61*R90 + R65*R94;
    double R97 = R57*(-R56*(R91 - R93 + R95) + R96);
    double R98 = R57*(R56*R96 - R91 + R93 - R95);
    double R99 = -R61*R97 + R70*R98 + R90;
    double R100 = -R53*R97 - R54*R98 + R92;
    double R101 = -R65*R97 + R71*R98 + R94;
    double R102 = 2*R73;
    double R103 = 2*R57*(R56*R72 + R69);
    double R104 = ((1.0/2.0)*R100*(-R102*R54 - R103*R53 + 2*R66 + 2*R67) + (1.0/2.0)*R101*(R102*R71 - R103*R65 + 2*R62 + 2*R63) + (1.0/2.0)*R99*(R102*R70 - R103*R61 - 2*R58 - 2*R59))/sqrt(pow(R100, 2) + pow(R101, 2) + pow(R99, 2));
    double R105 = R50*R7;
    double R106 = R105*a1 + R55;
    double R107 = -R34*a1 + R55*b1;
    double R108 = -R105*b1 - R34;
    double R109 = pow(pow(R106, 2) + pow(R107, 2) + pow(R108, 2), -1.0/2.0);
    double result = R3*R74 + R4*R74 + R5*R74 + ((R106*R109*R90 + R107*R109*R92 + R108*R109*R94 > 0) ? (
   -R104
)
: (
   R104
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dz(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = pow(R2, -1.0/2.0);
    double R8 = cos(plane_a);
    double R9 = cos(plane_b);
    double R10 = R8*R9;
    double R11 = sin(panel_a);
    double R12 = cos(panel_b);
    double R13 = 1.0*R11*R12;
    double R14 = sin(plane_b);
    double R15 = sin(panel_g);
    double R16 = cos(panel_a);
    double R17 = R15*R16;
    double R18 = sin(panel_b);
    double R19 = cos(panel_g);
    double R20 = R11*R19;
    double R21 = -R17 + R18*R20;
    double R22 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R23 = 1.0/R22;
    double R24 = R23*panel_straw0x;
    double R25 = R16*R19;
    double R26 = R11*R15;
    double R27 = R18*R26 + R25;
    double R28 = R23*panel_straw0y;
    double R29 = 1.0*R21*R24 - 1.0*R27*R28;
    double R30 = 1.0*R21*R28 + 1.0*R24*R27;
    double R31 = sin(plane_a);
    double R32 = R31*R9;
    double R33 = R10*R13 - R14*R29 + R30*R32;
    double R34 = R33*R7;
    double R35 = sin(plane_g);
    double R36 = R31*R35;
    double R37 = cos(plane_g);
    double R38 = R37*R8;
    double R39 = R14*R38;
    double R40 = R36 + R39;
    double R41 = R37*R9;
    double R42 = R35*R8;
    double R43 = R31*R37;
    double R44 = R14*R43 - R42;
    double R45 = R13*R40 + R29*R41 + R30*R44;
    double R46 = R14*R42;
    double R47 = -R43 + R46;
    double R48 = R35*R9;
    double R49 = R14*R36 + R38;
    double R50 = R13*R47 + R29*R48 + R30*R49;
    double R51 = pow(pow(R33, 2) + pow(R45, 2) + pow(R50, 2), -1.0/2.0);
    double R52 = R51*R6;
    double R53 = R50*R51;
    double R54 = R6*R7;
    double R55 = R45*R7;
    double R56 = R34*R52*b1 + R52*R55*a1 - R53*R54;
    double R57 = 1.0/(1.0 - pow(R56, 2));
    double R58 = R33*R51;
    double R59 = R43 - R46;
    double R60 = -R36 - R39;
    double R61 = R45*R51;
    double R62 = -R10*R58 + R53*R59 + R60*R61;
    double R63 = R54*b1;
    double R64 = R54*a1;
    double R65 = R10*R63 + R54*R59 - R60*R64;
    double R66 = R57*(R56*R62 + R65);
    double R67 = R6*R66;
    double R68 = -plane_z;
    double R69 = R68 + panel_dz + panel_straw0z;
    double R70 = R24*panel_dx - R28*panel_dy + panel_straw0x;
    double R71 = R24*panel_dy + R28*panel_dx + panel_straw0y;
    double R72 = -R22 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R73 = R12*R24;
    double R74 = R12*R28;
    double R75 = -R15*R74 + R19*R73;
    double R76 = R15*R73 + R19*R74;
    double R77 = -panel_straw0z + wire_z;
    double R78 = R12*R16;
    double R79 = R18*R25 + R26;
    double R80 = R17*R18 - R20;
    double R81 = R24*R79 - R28*R80;
    double R82 = R24*R80 + R28*R79;
    double R83 = -R10*R69 + R14*R70 - R32*R71 + R68 - R72*(-R10*R18 - R14*R75 + R32*R76) - R77*(R10*R78 - R14*R81 + R32*R82) + b0 - plane_dz;
    double R84 = R63*R83;
    double R85 = -R47*R69 - R48*R70 - R49*R71 - R72*(-R18*R47 + R48*R75 + R49*R76) - R77*(R47*R78 + R48*R81 + R49*R82) - plane_dy;
    double R86 = R54*R85;
    double R87 = -R40*R69 - R41*R70 - R44*R71 - R72*(-R18*R40 + R41*R75 + R44*R76) - R77*(R40*R78 + R41*R81 + R44*R82) + a0 - plane_dx;
    double R88 = R64*R87;
    double R89 = R53*R85 + R58*R83 + R61*R87;
    double R90 = R57*(-R56*(R84 - R86 + R88) + R89);
    double R91 = R57*(R56*R89 - R84 + R86 - R88);
    double R92 = -R58*R90 + R63*R91 + R83;
    double R93 = -R53*R90 - R54*R91 + R85;
    double R94 = -R61*R90 + R64*R91 + R87;
    double R95 = 2*R66;
    double R96 = 2*R57*(R56*R65 + R62);
    double R97 = ((1.0/2.0)*R92*(-2*R10 - R58*R96 + R63*R95) + (1.0/2.0)*R93*(2*R43 - 2*R46 - R53*R96 - R54*R95) + (1.0/2.0)*R94*(-2*R36 - 2*R39 - R61*R96 + R64*R95))/sqrt(pow(R92, 2) + pow(R93, 2) + pow(R94, 2));
    double R98 = R50*R7;
    double R99 = R55 + R98*a1;
    double R100 = -R34*a1 + R55*b1;
    double R101 = -R34 - R98*b1;
    double R102 = pow(pow(R100, 2) + pow(R101, 2) + pow(R99, 2), -1.0/2.0);
    double result = R3*R67 + R4*R67 + R5*R67 + ((R100*R102*R85 + R101*R102*R87 + R102*R83*R99 > 0) ? (
   -R97
)
: (
   R97
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_a(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = R3*R6;
    double R8 = cos(plane_a);
    double R9 = cos(plane_b);
    double R10 = R8*R9;
    double R11 = sin(panel_a);
    double R12 = cos(panel_b);
    double R13 = R11*R12;
    double R14 = R10*R13;
    double R15 = sin(plane_b);
    double R16 = sin(panel_g);
    double R17 = cos(panel_a);
    double R18 = R16*R17;
    double R19 = sin(panel_b);
    double R20 = cos(panel_g);
    double R21 = R11*R20;
    double R22 = R19*R21;
    double R23 = -R18 + R22;
    double R24 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R25 = 1.0/R24;
    double R26 = R25*panel_straw0x;
    double R27 = R17*R20;
    double R28 = R11*R16;
    double R29 = R19*R28;
    double R30 = R27 + R29;
    double R31 = R25*panel_straw0y;
    double R32 = 1.0*R23*R26 - 1.0*R30*R31;
    double R33 = 1.0*R23*R31 + 1.0*R26*R30;
    double R34 = sin(plane_a);
    double R35 = R34*R9;
    double R36 = 1.0*R14 - R15*R32 + R33*R35;
    double R37 = sin(plane_g);
    double R38 = R34*R37;
    double R39 = cos(plane_g);
    double R40 = R39*R8;
    double R41 = R15*R40;
    double R42 = R38 + R41;
    double R43 = R13*R42;
    double R44 = R39*R9;
    double R45 = R37*R8;
    double R46 = R34*R39;
    double R47 = R15*R46;
    double R48 = -R45 + R47;
    double R49 = R32*R44 + R33*R48 + 1.0*R43;
    double R50 = R15*R45;
    double R51 = -R46 + R50;
    double R52 = R13*R51;
    double R53 = R37*R9;
    double R54 = R15*R38;
    double R55 = R40 + R54;
    double R56 = R32*R53 + R33*R55 + 1.0*R52;
    double R57 = pow(R36, 2) + pow(R49, 2) + pow(R56, 2);
    double R58 = pow(R57, -1.0/2.0);
    double R59 = R58*R6;
    double R60 = pow(R2, -1.0/2.0);
    double R61 = R36*R60;
    double R62 = R61*b1;
    double R63 = R6*R60;
    double R64 = R56*R58;
    double R65 = R49*R60;
    double R66 = R65*a1;
    double R67 = R59*R62 + R59*R66 - R63*R64;
    double R68 = -plane_z;
    double R69 = R68 + panel_dz + panel_straw0z;
    double R70 = R26*panel_dx - R31*panel_dy + panel_straw0x;
    double R71 = R26*panel_dy + R31*panel_dx + panel_straw0y;
    double R72 = -R24 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R73 = R12*R26;
    double R74 = R12*R31;
    double R75 = -R16*R74 + R20*R73;
    double R76 = R16*R73 + R20*R74;
    double R77 = -panel_straw0z + wire_z;
    double R78 = R12*R17;
    double R79 = R10*R78;
    double R80 = R19*R27 + R28;
    double R81 = R26*R80;
    double R82 = R18*R19 - R21;
    double R83 = R31*R82;
    double R84 = R81 - R83;
    double R85 = R31*R80;
    double R86 = R26*R82;
    double R87 = R85 + R86;
    double R88 = -R10*R69 + R15*R70 - R35*R71 + R68 - R72*(-R10*R19 - R15*R75 + R35*R76) - R77*(-R15*R84 + R35*R87 + R79) + b0 - plane_dz;
    double R89 = R58*R88;
    double R90 = -R51*R69 - R53*R70 - R55*R71 - R72*(-R19*R51 + R53*R75 + R55*R76) - R77*(R51*R78 + R53*R84 + R55*R87) - plane_dy;
    double R91 = R58*R90;
    double R92 = -R42*R69 - R44*R70 - R48*R71 - R72*(-R19*R42 + R44*R75 + R48*R76) - R77*(R42*R78 + R44*R84 + R48*R87) + a0 - plane_dx;
    double R93 = R58*R92;
    double R94 = R36*R89 + R49*R93 + R56*R91;
    double R95 = R63*b1;
    double R96 = R88*R95;
    double R97 = R63*R90;
    double R98 = R63*a1;
    double R99 = R92*R98;
    double R100 = -R96 + R97 - R99;
    double R101 = R100 + R67*R94;
    double R102 = 1.0 - pow(R67, 2);
    double R103 = 1.0*R81;
    double R104 = 1.0*R83;
    double R105 = R15*(-R103 + R104);
    double R106 = R35*(1.0*R85 + 1.0*R86);
    double R107 = R105 + R106 + 1.0*R79;
    double R108 = R107*R58*R95;
    double R109 = R78*(-1.0*R46 + 1.0*R50);
    double R110 = R103 - R104;
    double R111 = R110*R53;
    double R112 = R87*(1.0*R40 + 1.0*R54);
    double R113 = R109 + R111 + R112;
    double R114 = R113*R58*R63;
    double R115 = R78*(1.0*R38 + 1.0*R41);
    double R116 = R110*R44;
    double R117 = R87*(-1.0*R45 + 1.0*R47);
    double R118 = R115 + R116 + R117;
    double R119 = R118*R58*R98;
    double R120 = (-1.0/2.0*R36*(2*R105 + 2*R106 + 2.0*R79) - 1.0/2.0*R49*(2*R115 + 2*R116 + 2*R117) - 1.0/2.0*R56*(2*R109 + 2*R111 + 2*R112))/pow(R57, 3.0/2.0);
    double R121 = R120*R6;
    double R122 = R121*R62;
    double R123 = R120*R56;
    double R124 = R123*R63;
    double R125 = R121*R66;
    double R126 = R67*(2*R108 - 2*R114 + 2*R119 + 2*R122 - 2*R124 + 2*R125)/pow(R102, 2);
    double R127 = R101*R126;
    double R128 = R127*R6;
    double R129 = 1.0/R102;
    double R130 = R108 - R114 + R119 + R122 - R124 + R125;
    double R131 = R18 - R22;
    double R132 = R131*R26;
    double R133 = -R27 - R29;
    double R134 = R133*R31;
    double R135 = R131*R31 + R133*R26;
    double R136 = R135*R35 - R14 + R15*(-R132 + R134);
    double R137 = panel_straw0z - wire_z;
    double R138 = R137*R58;
    double R139 = R132 - R134;
    double R140 = R135*R48 + R139*R44 - R43;
    double R141 = R135*R55 + R139*R53 - R52;
    double R142 = R137*R141;
    double R143 = R120*R36;
    double R144 = R120*R49;
    double R145 = R107*R89 + R113*R91 + R118*R93 + R123*R90 + R136*R138*R36 + R138*R140*R49 + R142*R64 + R143*R88 + R144*R92;
    double R146 = -R136*R137*R95 - R137*R140*R98 + R142*R63;
    double R147 = R129*(R130*R94 + R145*R67 + R146);
    double R148 = R147*R6;
    double R149 = -R67*(R96 - R97 + R99) + R94;
    double R150 = R129*R149;
    double R151 = R150*R58;
    double R152 = R101*R129;
    double R153 = -R151*R36 + R152*R95 + R88;
    double R154 = -R150*R64 - R152*R63 + R90;
    double R155 = -R151*R49 + R152*R98 + R92;
    double R156 = 2*R137;
    double R157 = 2*R151;
    double R158 = 2*R150;
    double R159 = 2*R127;
    double R160 = 2*R58;
    double R161 = R126*R149;
    double R162 = R160*R161;
    double R163 = R129*(R100*R130 + R145 + R146*R67);
    double R164 = R160*R163;
    double R165 = 2*R147;
    double R166 = 2*R64;
    double R167 = ((1.0/2.0)*R153*(-R107*R157 + R136*R156 - R143*R158 + R159*R95 - R162*R36 - R164*R36 + R165*R95) + (1.0/2.0)*R154*(-R113*R157 - R123*R158 + R141*R156 - R159*R63 - R161*R166 - R163*R166 - R165*R63) + (1.0/2.0)*R155*(-R118*R157 + R140*R156 - R144*R158 + R159*R98 - R162*R49 - R164*R49 + R165*R98))/sqrt(pow(R153, 2) + pow(R154, 2) + pow(R155, 2));
    double R168 = R56*R60;
    double R169 = R168*a1 + R65;
    double R170 = -R61*a1 + R65*b1;
    double R171 = -R168*b1 - R61;
    double R172 = pow(pow(R169, 2) + pow(R170, 2) + pow(R171, 2), -1.0/2.0);
    double result = R127*R7 + R128*R4 + R128*R5 + R147*R7 + R148*R4 + R148*R5 + ((R169*R172*R88 + R170*R172*R90 + R171*R172*R92 > 0) ? (
   -R167
)
: (
   R167
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_b(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = R3*R6;
    double R8 = cos(panel_b);
    double R9 = cos(plane_a);
    double R10 = cos(plane_b);
    double R11 = R10*R9;
    double R12 = R11*R8;
    double R13 = sin(panel_a);
    double R14 = 1.0*R13;
    double R15 = sin(plane_b);
    double R16 = sin(panel_g);
    double R17 = cos(panel_a);
    double R18 = R16*R17;
    double R19 = sin(panel_b);
    double R20 = cos(panel_g);
    double R21 = R13*R20;
    double R22 = -R18 + R19*R21;
    double R23 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R24 = 1.0/R23;
    double R25 = R24*panel_straw0x;
    double R26 = R17*R20;
    double R27 = R13*R16;
    double R28 = R19*R27 + R26;
    double R29 = R24*panel_straw0y;
    double R30 = 1.0*R22*R25 - 1.0*R28*R29;
    double R31 = 1.0*R22*R29 + 1.0*R25*R28;
    double R32 = sin(plane_a);
    double R33 = R10*R32;
    double R34 = R12*R14 - R15*R30 + R31*R33;
    double R35 = sin(plane_g);
    double R36 = R32*R35;
    double R37 = cos(plane_g);
    double R38 = R37*R9;
    double R39 = R15*R38;
    double R40 = R36 + R39;
    double R41 = R14*R8;
    double R42 = R10*R37;
    double R43 = R35*R9;
    double R44 = R32*R37;
    double R45 = R15*R44;
    double R46 = -R43 + R45;
    double R47 = R30*R42 + R31*R46 + R40*R41;
    double R48 = R15*R43;
    double R49 = -R44 + R48;
    double R50 = R10*R35;
    double R51 = R15*R36;
    double R52 = R38 + R51;
    double R53 = R30*R50 + R31*R52 + R41*R49;
    double R54 = pow(R34, 2) + pow(R47, 2) + pow(R53, 2);
    double R55 = pow(R54, -1.0/2.0);
    double R56 = R55*R6;
    double R57 = pow(R2, -1.0/2.0);
    double R58 = R34*R57;
    double R59 = R58*b1;
    double R60 = R53*R55;
    double R61 = R57*R6;
    double R62 = R47*R57;
    double R63 = R62*a1;
    double R64 = R56*R59 + R56*R63 - R60*R61;
    double R65 = -plane_z;
    double R66 = R65 + panel_dz + panel_straw0z;
    double R67 = R25*panel_dx - R29*panel_dy + panel_straw0x;
    double R68 = R25*panel_dy + R29*panel_dx + panel_straw0y;
    double R69 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R70 = -R23 + R69;
    double R71 = R11*R19;
    double R72 = R25*R8;
    double R73 = R29*R8;
    double R74 = -R16*R73 + R20*R72;
    double R75 = R16*R72 + R20*R73;
    double R76 = -panel_straw0z + wire_z;
    double R77 = R17*R8;
    double R78 = R19*R26 + R27;
    double R79 = R18*R19 - R21;
    double R80 = R25*R78 - R29*R79;
    double R81 = R25*R79 + R29*R78;
    double R82 = -R11*R66 + R15*R67 - R33*R68 + R65 - R70*(-R15*R74 + R33*R75 - R71) - R76*(R11*R77 - R15*R80 + R33*R81) + b0 - plane_dz;
    double R83 = R34*R55;
    double R84 = R19*R49;
    double R85 = -R49*R66 - R50*R67 - R52*R68 - R70*(R50*R74 + R52*R75 - R84) - R76*(R49*R77 + R50*R80 + R52*R81) - plane_dy;
    double R86 = R19*R40;
    double R87 = -R40*R66 - R42*R67 - R46*R68 - R70*(R42*R74 + R46*R75 - R86) - R76*(R40*R77 + R42*R80 + R46*R81) + a0 - plane_dx;
    double R88 = R47*R55;
    double R89 = R60*R85 + R82*R83 + R87*R88;
    double R90 = R61*b1;
    double R91 = R82*R90;
    double R92 = R61*R85;
    double R93 = R61*a1;
    double R94 = R87*R93;
    double R95 = -R91 + R92 - R94;
    double R96 = R64*R89 + R95;
    double R97 = 1.0 - pow(R64, 2);
    double R98 = 1.0*R21*R72;
    double R99 = 1.0*R27*R73;
    double R100 = R15*(-R98 + R99);
    double R101 = R27*R72;
    double R102 = R21*R73;
    double R103 = R33*(1.0*R101 + 1.0*R102);
    double R104 = R55*(R100 + R103 - R14*R71);
    double R105 = R104*R90;
    double R106 = R13*R19;
    double R107 = R106*(-1.0*R44 + 1.0*R48);
    double R108 = R98 - R99;
    double R109 = R108*R50;
    double R110 = R101 + R102;
    double R111 = R110*(1.0*R38 + 1.0*R51);
    double R112 = R55*(-R107 + R109 + R111);
    double R113 = R112*R61;
    double R114 = R106*(1.0*R36 + 1.0*R39);
    double R115 = R108*R42;
    double R116 = R110*(-1.0*R43 + 1.0*R45);
    double R117 = R55*(-R114 + R115 + R116);
    double R118 = R117*R93;
    double R119 = (-1.0/2.0*R34*(2*R100 + 2*R103 - 2.0*R13*R71) - 1.0/2.0*R47*(-2*R114 + 2*R115 + 2*R116) - 1.0/2.0*R53*(-2*R107 + 2*R109 + 2*R111))/pow(R54, 3.0/2.0);
    double R120 = R119*R6;
    double R121 = R120*R59;
    double R122 = R119*R53;
    double R123 = R122*R61;
    double R124 = R120*R63;
    double R125 = R64*(2*R105 - 2*R113 + 2*R118 + 2*R121 - 2*R123 + 2*R124)/pow(R97, 2);
    double R126 = R125*R96;
    double R127 = R126*R6;
    double R128 = 1.0/R97;
    double R129 = R105 - R113 + R118 + R121 - R123 + R124;
    double R130 = panel_straw0z - wire_z;
    double R131 = R18*R73;
    double R132 = R26*R72;
    double R133 = R18*R72 + R26*R73;
    double R134 = R130*(R133*R33 + R15*(R131 - R132) - R17*R71);
    double R135 = R23 - R69;
    double R136 = R19*R20;
    double R137 = R136*R25;
    double R138 = R16*R19;
    double R139 = R138*R29;
    double R140 = -R136*R29 - R138*R25;
    double R141 = R135*(-R12 + R140*R33 + R15*(R137 - R139));
    double R142 = R134 + R141;
    double R143 = -R131 + R132;
    double R144 = R130*(R133*R52 + R143*R50 - R17*R84);
    double R145 = -R137 + R139;
    double R146 = R135*(R140*R52 + R145*R50 + R8*(R44 - R48));
    double R147 = R144 + R146;
    double R148 = R130*(R133*R46 + R143*R42 - R17*R86);
    double R149 = R135*(R140*R46 + R145*R42 + R8*(-R36 - R39));
    double R150 = R148 + R149;
    double R151 = R119*R34;
    double R152 = R119*R47;
    double R153 = R104*R82 + R112*R85 + R117*R87 + R122*R85 + R142*R83 + R147*R60 + R150*R88 + R151*R82 + R152*R87;
    double R154 = -R142*R90 + R147*R61 - R150*R93;
    double R155 = R128*(R129*R89 + R153*R64 + R154);
    double R156 = R155*R6;
    double R157 = -R64*(R91 - R92 + R94) + R89;
    double R158 = R128*R157;
    double R159 = R128*R96;
    double R160 = -R158*R83 + R159*R90 + R82;
    double R161 = -R158*R60 - R159*R61 + R85;
    double R162 = -R158*R88 + R159*R93 + R87;
    double R163 = 2*R158;
    double R164 = 2*R126;
    double R165 = R125*R157;
    double R166 = 2*R165;
    double R167 = R128*(R129*R95 + R153 + R154*R64);
    double R168 = 2*R167;
    double R169 = 2*R155;
    double R170 = 2*R60;
    double R171 = ((1.0/2.0)*R160*(-R104*R163 + 2*R134 + 2*R141 - R151*R163 + R164*R90 - R166*R83 - R168*R83 + R169*R90) + (1.0/2.0)*R161*(-R112*R163 - R122*R163 + 2*R144 + 2*R146 - R164*R61 - R165*R170 - R167*R170 - R169*R61) + (1.0/2.0)*R162*(-R117*R163 + 2*R148 + 2*R149 - R152*R163 + R164*R93 - R166*R88 - R168*R88 + R169*R93))/sqrt(pow(R160, 2) + pow(R161, 2) + pow(R162, 2));
    double R172 = R53*R57;
    double R173 = R172*a1 + R62;
    double R174 = -R58*a1 + R62*b1;
    double R175 = -R172*b1 - R58;
    double R176 = pow(pow(R173, 2) + pow(R174, 2) + pow(R175, 2), -1.0/2.0);
    double result = R126*R7 + R127*R4 + R127*R5 + R155*R7 + R156*R4 + R156*R5 + ((R173*R176*R82 + R174*R176*R85 + R175*R176*R87 > 0) ? (
   -R171
)
: (
   R171
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_g(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = pow(b1, 2);
    double R2 = R0 + R1 + 1;
    double R3 = 1.0/R2;
    double R4 = R0*R3;
    double R5 = R1*R3;
    double R6 = pow(R3 + R4 + R5, -1.0/2.0);
    double R7 = R3*R6;
    double R8 = cos(plane_a);
    double R9 = cos(plane_b);
    double R10 = R8*R9;
    double R11 = sin(panel_a);
    double R12 = cos(panel_b);
    double R13 = 1.0*R11*R12;
    double R14 = sin(plane_b);
    double R15 = sin(panel_g);
    double R16 = cos(panel_a);
    double R17 = R15*R16;
    double R18 = sin(panel_b);
    double R19 = cos(panel_g);
    double R20 = R11*R19;
    double R21 = -R17 + R18*R20;
    double R22 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R23 = 1.0/R22;
    double R24 = R23*panel_straw0x;
    double R25 = R21*R24;
    double R26 = R16*R19;
    double R27 = R11*R15;
    double R28 = R18*R27;
    double R29 = R26 + R28;
    double R30 = R23*panel_straw0y;
    double R31 = 1.0*R25 - 1.0*R29*R30;
    double R32 = R21*R30;
    double R33 = 1.0*R24*R29 + 1.0*R32;
    double R34 = sin(plane_a);
    double R35 = R34*R9;
    double R36 = R10*R13 - R14*R31 + R33*R35;
    double R37 = sin(plane_g);
    double R38 = R34*R37;
    double R39 = cos(plane_g);
    double R40 = R39*R8;
    double R41 = R14*R40 + R38;
    double R42 = R39*R9;
    double R43 = R37*R8;
    double R44 = R34*R39;
    double R45 = R14*R44;
    double R46 = -R43 + R45;
    double R47 = R13*R41 + R31*R42 + R33*R46;
    double R48 = R14*R43 - R44;
    double R49 = R37*R9;
    double R50 = R14*R38;
    double R51 = R40 + R50;
    double R52 = R13*R48 + R31*R49 + R33*R51;
    double R53 = pow(R36, 2) + pow(R47, 2) + pow(R52, 2);
    double R54 = pow(R53, -1.0/2.0);
    double R55 = R54*R6;
    double R56 = pow(R2, -1.0/2.0);
    double R57 = R36*R56;
    double R58 = R57*b1;
    double R59 = R52*R54;
    double R60 = R56*R6;
    double R61 = R47*R56;
    double R62 = R61*a1;
    double R63 = R55*R58 + R55*R62 - R59*R60;
    double R64 = -plane_z;
    double R65 = R64 + panel_dz + panel_straw0z;
    double R66 = R24*panel_dx - R30*panel_dy + panel_straw0x;
    double R67 = R24*panel_dy + R30*panel_dx + panel_straw0y;
    double R68 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R69 = -R22 + R68;
    double R70 = R12*R24;
    double R71 = R12*R30;
    double R72 = -R15*R71 + R19*R70;
    double R73 = R15*R70;
    double R74 = R19*R71;
    double R75 = R73 + R74;
    double R76 = -panel_straw0z + wire_z;
    double R77 = R12*R16;
    double R78 = R18*R26 + R27;
    double R79 = R24*R78;
    double R80 = R17*R18;
    double R81 = -R20 + R80;
    double R82 = -R30*R81 + R79;
    double R83 = R30*R78;
    double R84 = R24*R81 + R83;
    double R85 = -R10*R65 + R14*R66 - R35*R67 + R64 - R69*(-R10*R18 - R14*R72 + R35*R75) - R76*(R10*R77 - R14*R82 + R35*R84) + b0 - plane_dz;
    double R86 = R36*R54;
    double R87 = -R48*R65 - R49*R66 - R51*R67 - R69*(-R18*R48 + R49*R72 + R51*R75) - R76*(R48*R77 + R49*R82 + R51*R84) - plane_dy;
    double R88 = -R41*R65 - R42*R66 - R46*R67 - R69*(-R18*R41 + R42*R72 + R46*R75) - R76*(R41*R77 + R42*R82 + R46*R84) + a0 - plane_dx;
    double R89 = R47*R54;
    double R90 = R59*R87 + R85*R86 + R88*R89;
    double R91 = R60*b1;
    double R92 = R85*R91;
    double R93 = R60*R87;
    double R94 = R60*a1;
    double R95 = R88*R94;
    double R96 = -R92 + R93 - R95;
    double R97 = R63*R90 + R96;
    double R98 = 1.0 - pow(R63, 2);
    double R99 = 1.0*R32;
    double R100 = -R26 - R28;
    double R101 = 1.0*R100*R24;
    double R102 = R14*(-R101 + R99);
    double R103 = R100*R30;
    double R104 = R35*(1.0*R103 + 1.0*R25);
    double R105 = R54*(R102 + R104);
    double R106 = R105*R91;
    double R107 = R101 - R99;
    double R108 = R107*R49;
    double R109 = R103 + R25;
    double R110 = R109*(1.0*R40 + 1.0*R50);
    double R111 = R54*(R108 + R110);
    double R112 = R111*R60;
    double R113 = R107*R42;
    double R114 = R109*(-1.0*R43 + 1.0*R45);
    double R115 = R54*(R113 + R114);
    double R116 = R115*R94;
    double R117 = (-1.0/2.0*R36*(2*R102 + 2*R104) - 1.0/2.0*R47*(2*R113 + 2*R114) - 1.0/2.0*R52*(2*R108 + 2*R110))/pow(R53, 3.0/2.0);
    double R118 = R117*R6;
    double R119 = R118*R58;
    double R120 = R117*R52;
    double R121 = R120*R60;
    double R122 = R118*R62;
    double R123 = R63*(2*R106 - 2*R112 + 2*R116 + 2*R119 - 2*R121 + 2*R122)/pow(R98, 2);
    double R124 = R123*R97;
    double R125 = R124*R6;
    double R126 = 1.0/R98;
    double R127 = R106 - R112 + R116 + R119 - R121 + R122;
    double R128 = R22 - R68;
    double R129 = R128*(R14*R75 + R35*R72);
    double R130 = panel_straw0z - wire_z;
    double R131 = R20 - R80;
    double R132 = R131*R24;
    double R133 = R131*R30 + R79;
    double R134 = R130*(R133*R35 + R14*(-R132 + R83));
    double R135 = R129 + R134;
    double R136 = -R73 - R74;
    double R137 = R128*(R136*R49 + R51*R72);
    double R138 = R132 - R83;
    double R139 = R130*(R133*R51 + R138*R49);
    double R140 = R137 + R139;
    double R141 = R128*(R136*R42 + R46*R72);
    double R142 = R130*(R133*R46 + R138*R42);
    double R143 = R141 + R142;
    double R144 = R117*R36;
    double R145 = R117*R47;
    double R146 = R105*R85 + R111*R87 + R115*R88 + R120*R87 + R135*R86 + R140*R59 + R143*R89 + R144*R85 + R145*R88;
    double R147 = -R135*R91 + R140*R60 - R143*R94;
    double R148 = R126*(R127*R90 + R146*R63 + R147);
    double R149 = R148*R6;
    double R150 = -R63*(R92 - R93 + R95) + R90;
    double R151 = R126*R150;
    double R152 = R126*R97;
    double R153 = -R151*R86 + R152*R91 + R85;
    double R154 = -R151*R59 - R152*R60 + R87;
    double R155 = -R151*R89 + R152*R94 + R88;
    double R156 = 2*R151;
    double R157 = 2*R124;
    double R158 = R123*R150;
    double R159 = 2*R158;
    double R160 = R126*(R127*R96 + R146 + R147*R63);
    double R161 = 2*R160;
    double R162 = 2*R148;
    double R163 = 2*R59;
    double R164 = ((1.0/2.0)*R153*(-R105*R156 + 2*R129 + 2*R134 - R144*R156 + R157*R91 - R159*R86 - R161*R86 + R162*R91) + (1.0/2.0)*R154*(-R111*R156 - R120*R156 + 2*R137 + 2*R139 - R157*R60 - R158*R163 - R160*R163 - R162*R60) + (1.0/2.0)*R155*(-R115*R156 + 2*R141 + 2*R142 - R145*R156 + R157*R94 - R159*R89 - R161*R89 + R162*R94))/sqrt(pow(R153, 2) + pow(R154, 2) + pow(R155, 2));
    double R165 = R52*R56;
    double R166 = R165*a1 + R61;
    double R167 = -R57*a1 + R61*b1;
    double R168 = -R165*b1 - R57;
    double R169 = pow(pow(R166, 2) + pow(R167, 2) + pow(R168, 2), -1.0/2.0);
    double result = R124*R7 + R125*R4 + R125*R5 + R148*R7 + R149*R4 + R149*R5 + ((R166*R169*R85 + R167*R169*R87 + R168*R169*R88 > 0) ? (
   -R164
)
: (
   R164
))/driftvel;
    return result;
}


std::vector<double> CosmicTrack_DCA_LocalDeriv(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
        std::vector<double> result = {CosmicTrack_DCA_Deriv_a0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_b0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_a1(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_b1(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_t0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel)};
return result;
}

std::vector<double> CosmicTrack_DCA_GlobalDeriv(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
        std::vector<double> result = {CosmicTrack_DCA_Deriv_plane_dx(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_dy(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_dz(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_a(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_b(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_g(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dx(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dy(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dz(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_a(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_b(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_g(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel)};
return result;
}

